///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace POCSmiles.Mobile.AppSmiles.Pagamento
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Pagamento recording.
    /// </summary>
    [TestModule("c990a323-5542-49f2-a764-001b2732b6d3", ModuleType.Recording, 1)]
    public partial class Pagamento : ITestModule
    {
        /// <summary>
        /// Holds an instance of the POCSmiles.SmilesRepository repository.
        /// </summary>
        public static POCSmiles.SmilesRepository repo = POCSmiles.SmilesRepository.Instance;

        static Pagamento instance = new Pagamento();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Pagamento()
        {
            NomeTitular = "";
            NumeroCartao = "";
            MesVencimento = "";
            AnoVencimento = "";
            CodigoSeguranca = "";
            Senha = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Pagamento Instance
        {
            get { return instance; }
        }

#region Variables

        string _NomeTitular;

        /// <summary>
        /// Gets or sets the value of variable NomeTitular.
        /// </summary>
        [TestVariable("765db1e9-78f7-43fb-a735-82f1c7d2c596")]
        public string NomeTitular
        {
            get { return _NomeTitular; }
            set { _NomeTitular = value; }
        }

        string _NumeroCartao;

        /// <summary>
        /// Gets or sets the value of variable NumeroCartao.
        /// </summary>
        [TestVariable("625d630b-bfc9-4fae-88fa-651afd2d4c38")]
        public string NumeroCartao
        {
            get { return _NumeroCartao; }
            set { _NumeroCartao = value; }
        }

        string _MesVencimento;

        /// <summary>
        /// Gets or sets the value of variable MesVencimento.
        /// </summary>
        [TestVariable("4d3a4de5-68d4-4eeb-90a2-82032ed81306")]
        public string MesVencimento
        {
            get { return _MesVencimento; }
            set { _MesVencimento = value; }
        }

        string _AnoVencimento;

        /// <summary>
        /// Gets or sets the value of variable AnoVencimento.
        /// </summary>
        [TestVariable("59bd606e-63ce-499d-9aae-0658cff317af")]
        public string AnoVencimento
        {
            get { return _AnoVencimento; }
            set { _AnoVencimento = value; }
        }

        string _CodigoSeguranca;

        /// <summary>
        /// Gets or sets the value of variable CodigoSeguranca.
        /// </summary>
        [TestVariable("e6745332-c010-4f6a-849e-36263919fd2e")]
        public string CodigoSeguranca
        {
            get { return _CodigoSeguranca; }
            set { _CodigoSeguranca = value; }
        }

        string _Senha;

        /// <summary>
        /// Gets or sets the value of variable Senha.
        /// </summary>
        [TestVariable("f5a885a7-57c7-43a8-bebc-b57211a84938")]
        public string Senha
        {
            get { return _Senha; }
            set { _Senha = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable BandeiraCartaoCredito.
        /// </summary>
        [TestVariable("072c48c7-fcbb-48a2-beb5-0af87eb5e2a8")]
        public string BandeiraCartaoCredito
        {
            get { return repo.BandeiraCartaoCredito; }
            set { repo.BandeiraCartaoCredito = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Touch", "Touch item 'AppSmiles.TicketingActivity.RadioCartao' at Center", repo.AppSmiles.TicketingActivity.RadioCartaoInfo, new RecordItemIndex(0));
            repo.AppSmiles.TicketingActivity.RadioCartao.Touch();
            Delay.Milliseconds(500);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.AppSmiles.Self, false, new RecordItemIndex(1));
            
            Report.Log(ReportLevel.Info, "Set Value", "Setting attribute Text to '$NomeTitular' on item 'AppSmiles.TicketingActivity.NumeroCartao'.", repo.AppSmiles.TicketingActivity.NumeroCartaoInfo, new RecordItemIndex(2));
            repo.AppSmiles.TicketingActivity.NumeroCartao.Element.SetAttributeValue("Text", NomeTitular);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set Value", "Setting attribute Text to '$NumeroCartao' on item 'AppSmiles.TicketingActivity.NomeTitular'.", repo.AppSmiles.TicketingActivity.NomeTitularInfo, new RecordItemIndex(3));
            repo.AppSmiles.TicketingActivity.NomeTitular.Element.SetAttributeValue("Text", NumeroCartao);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set Value", "Setting attribute Text to '$MesVencimento' on item 'AppSmiles.TicketingActivity.Mes'.", repo.AppSmiles.TicketingActivity.MesInfo, new RecordItemIndex(4));
            repo.AppSmiles.TicketingActivity.Mes.Element.SetAttributeValue("Text", MesVencimento);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set Value", "Setting attribute Text to '$AnoVencimento' on item 'AppSmiles.TicketingActivity.Ano'.", repo.AppSmiles.TicketingActivity.AnoInfo, new RecordItemIndex(5));
            repo.AppSmiles.TicketingActivity.Ano.Element.SetAttributeValue("Text", AnoVencimento);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set Value", "Setting attribute Text to '$CodigoSeguranca' on item 'AppSmiles.TicketingActivity.CodigoSeguranca'.", repo.AppSmiles.TicketingActivity.CodigoSegurancaInfo, new RecordItemIndex(6));
            repo.AppSmiles.TicketingActivity.CodigoSeguranca.Element.SetAttributeValue("Text", CodigoSeguranca);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set Value", "Setting attribute Text to '$Senha' on item 'AppSmiles.TicketingActivity.SenhaSmiles'.", repo.AppSmiles.TicketingActivity.SenhaSmilesInfo, new RecordItemIndex(7));
            repo.AppSmiles.TicketingActivity.SenhaSmiles.Element.SetAttributeValue("Text", Senha);
            Delay.Milliseconds(0);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.AppSmiles.Self, false, new RecordItemIndex(8));
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'AppSmiles.TicketingActivity.BotaoContinuar1' at Center", repo.AppSmiles.TicketingActivity.BotaoContinuar1Info, new RecordItemIndex(9));
            repo.AppSmiles.TicketingActivity.BotaoContinuar1.Touch();
            Delay.Milliseconds(500);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
