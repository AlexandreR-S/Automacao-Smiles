///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace POCSmiles.ClubeSmiles
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The ComprarComTecladoVirtualClubeSmilesNew recording.
    /// </summary>
    [TestModule("fcb495ac-4dcc-4f91-a605-51228153ebbc", ModuleType.Recording, 1)]
    public partial class ComprarComTecladoVirtualClubeSmilesNew : ITestModule
    {
        /// <summary>
        /// Holds an instance of the POCSmiles.SmilesRepository repository.
        /// </summary>
        public static POCSmiles.SmilesRepository repo = POCSmiles.SmilesRepository.Instance;

        static ComprarComTecladoVirtualClubeSmilesNew instance = new ComprarComTecladoVirtualClubeSmilesNew();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public ComprarComTecladoVirtualClubeSmilesNew()
        {
            NomeTitular = "WELLINGTON SANTANA";
            NumeroCartao = "4111111111111111";
            MesVencimento = "6";
            AnoVencimento = "2016";
            CodigoSeguranca = "737";
            TecladoVirtual = "";
            BandeiraCartaoCredito = "";
            DiaVencimentoClubeSmiles = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static ComprarComTecladoVirtualClubeSmilesNew Instance
        {
            get { return instance; }
        }

#region Variables

        string _NomeTitular;

        /// <summary>
        /// Gets or sets the value of variable NomeTitular.
        /// </summary>
        [TestVariable("25ca4cc0-81a8-437a-b278-111a0745c992")]
        public string NomeTitular
        {
            get { return _NomeTitular; }
            set { _NomeTitular = value; }
        }

        string _NumeroCartao;

        /// <summary>
        /// Gets or sets the value of variable NumeroCartao.
        /// </summary>
        [TestVariable("f7769ecc-ff54-48a9-a21a-7ef4675492d0")]
        public string NumeroCartao
        {
            get { return _NumeroCartao; }
            set { _NumeroCartao = value; }
        }

        string _MesVencimento;

        /// <summary>
        /// Gets or sets the value of variable MesVencimento.
        /// </summary>
        [TestVariable("2e141d88-3b59-4d88-b4ee-5cc1f395cb6d")]
        public string MesVencimento
        {
            get { return _MesVencimento; }
            set { _MesVencimento = value; }
        }

        string _AnoVencimento;

        /// <summary>
        /// Gets or sets the value of variable AnoVencimento.
        /// </summary>
        [TestVariable("fac2d0fd-99d5-4d6b-a982-e5a841f0d38b")]
        public string AnoVencimento
        {
            get { return _AnoVencimento; }
            set { _AnoVencimento = value; }
        }

        string _CodigoSeguranca;

        /// <summary>
        /// Gets or sets the value of variable CodigoSeguranca.
        /// </summary>
        [TestVariable("03141d06-fc81-42bd-b6f1-ee8cb3ae7ec9")]
        public string CodigoSeguranca
        {
            get { return _CodigoSeguranca; }
            set { _CodigoSeguranca = value; }
        }

        string _TecladoVirtual;

        /// <summary>
        /// Gets or sets the value of variable TecladoVirtual.
        /// </summary>
        [TestVariable("93cc267c-19d6-4f5f-8ddd-baac9e896682")]
        public string TecladoVirtual
        {
            get { return _TecladoVirtual; }
            set { _TecladoVirtual = value; }
        }

        string _DiaVencimentoClubeSmiles;

        /// <summary>
        /// Gets or sets the value of variable DiaVencimentoClubeSmiles.
        /// </summary>
        [TestVariable("721b1c1d-9d38-47e3-802b-b032f75c2252")]
        public string DiaVencimentoClubeSmiles
        {
            get { return _DiaVencimentoClubeSmiles; }
            set { _DiaVencimentoClubeSmiles = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable URL.
        /// </summary>
        [TestVariable("aa7b91c3-8944-44bc-a709-ada666e82f1a")]
        public string URL
        {
            get { return repo.URL; }
            set { repo.URL = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable BandeiraCartaoCredito.
        /// </summary>
        [TestVariable("dd85eb39-c2e3-40dc-8073-47e7b462f36b")]
        public string BandeiraCartaoCredito
        {
            get { return repo.BandeiraCartaoCredito; }
            set { repo.BandeiraCartaoCredito = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Next}'.", new RecordItemIndex(0));
            //Keyboard.Press("{Next}", 1);
            //Delay.Milliseconds(90);
            
            //SeleclCreditCardFlag(BandeiraCartaoCredito);
            //Delay.Milliseconds(0);
            
            //WaitSmilesLoad();
            //Delay.Milliseconds(0);
            
            //TypeKeys("//input[#'creditCardHolderName']", NomeTitular);
            //Delay.Milliseconds(0);
            
            //TypeKeys("//input[#'creditCardNumber']", NumeroCartao);
            //Delay.Milliseconds(0);
            
            //SelectItemListBox("//select[#'expirationMonth']", MesVencimento);
            //Delay.Milliseconds(0);
            
            //TypeKeys("//input[#'secureCode']", CodigoSeguranca);
            //Delay.Milliseconds(0);
            
            //SelectItemListBox("//select[#'expirationYear']", AnoVencimento);
            //Delay.Milliseconds(0);
            
            //InserirTecladoVirtual(TecladoVirtual);
            //Delay.Milliseconds(0);
            
            //SelecionarDiaVencimentoClubeSmiles(DiaVencimentoClubeSmiles);
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SmilesOMelhorProgramaDeMilhasS1.ComprarMilhas_Processar' at UpperCenter.", repo.SmilesOMelhorProgramaDeMilhasS1.ComprarMilhas_ProcessarInfo, new RecordItemIndex(10));
            //repo.SmilesOMelhorProgramaDeMilhasS1.ComprarMilhas_Processar.Click(Location.UpperCenter, 1);
            //Delay.Milliseconds(490);
            
            //WaitLoad();
            //Delay.Milliseconds(0);
            
            //Report.Screenshot(ReportLevel.Success, "User", "", null, false, new RecordItemIndex(12));
            
            TypeKeys("//input[#'creditCardHolderName']", NomeTitular);
            Delay.Milliseconds(0);
            
            TypeKeys("//input[#'creditCardNumber']", NumeroCartao);
            Delay.Milliseconds(0);
            
            //SelectItemListBox("//select[#'expirationMonth']", MesVencimento);
            //Delay.Milliseconds(0);
            
            //SelectItemListBox("//select[#'expirationYear']", AnoVencimento);
            //Delay.Milliseconds(0);
            
            SelectItemListBoxAsHuman("//div[@Class~'cs-select cs-skin-silver payment'][1]", MesVencimento, "1");
            Delay.Milliseconds(0);
            
            SelectItemListBoxAsHuman("//div[@Class~'cs-select cs-skin-silver payment'][2]", AnoVencimento, "1");
            Delay.Milliseconds(0);
            
            TypeKeys("//input[#'secureCode']", CodigoSeguranca);
            Delay.Milliseconds(0);
            
            InserirTecladoVirtual(TecladoVirtual);
            Delay.Milliseconds(0);
            
            //SelecionarDiaVencimentoClubeSmiles(DiaVencimentoClubeSmiles);
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SmilesOMelhorProgramaDeMilhasS1.ClubeSmiles_LiEConcordoEmissao' at Center.", repo.SmilesOMelhorProgramaDeMilhasS1.ClubeSmiles_LiEConcordoEmissaoInfo, new RecordItemIndex(22));
            //repo.SmilesOMelhorProgramaDeMilhasS1.ClubeSmiles_LiEConcordoEmissao.Click(1);
            //Delay.Milliseconds(490);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SmilesOMelhorProgramaDeMilhasS1.LiEConcordoComOsDoClubeSmilesE' at Center.", repo.SmilesOMelhorProgramaDeMilhasS1.LiEConcordoComOsDoClubeSmilesEInfo, new RecordItemIndex(23));
            repo.SmilesOMelhorProgramaDeMilhasS1.LiEConcordoComOsDoClubeSmilesE.Click(1);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Next}'.", new RecordItemIndex(24));
            Keyboard.Press("{Next}", 1);
            Delay.Milliseconds(90);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SmilesOMelhorProgramaDeMilhasS1.ComprarMilhas_Processar' at UpperCenter.", repo.SmilesOMelhorProgramaDeMilhasS1.ComprarMilhas_ProcessarInfo, new RecordItemIndex(25));
            repo.SmilesOMelhorProgramaDeMilhasS1.ComprarMilhas_Processar.Click(Location.UpperCenter, 1);
            Delay.Milliseconds(490);
            
            WaitLoad();
            Delay.Milliseconds(0);
            
            Report.Screenshot(ReportLevel.Success, "User", "", null, false, new RecordItemIndex(27));
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
