///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
// 
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Drawing;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Repository;
using Ranorex.Core.Testing;

namespace POCSmiles.Mobile.AppSmiles.BuscaDeVoos
{
    public partial class SelecionarVoo
    {
        /// <summary>
        /// This method gets called right after the recording has been started.
        /// It can be used to execute recording specific initialization code.
        /// </summary>
        private void Init()
        {
            // Your recording specific initialization code goes here.
        }

        public void SelecionarVoos(string voo1, string voo2)
        {
        	try {
        		if (!voo1.Equals("")) {
        			switch (voo1) {
        				case "Smiles":
        					repo.AppSmiles.TicketingActivity.OpcaoSmiles.Touch();
        					break;
        				case "Smiles & Money":
        					repo.AppSmiles.TicketingActivity.OpcaoSmilesMoney.Touch();
        					break;
        				default:
        					throw new Exception("Opção seleciona não é válida");
        					break;
        			}
        			repo.AppSmiles.TicketingActivity.BotaoContinuar1.Touch();
        			repo.AppSmiles.TicketingActivity.BotaoContinuar2.Touch();
        		}
        		if (!voo2.Equals("")) {
        			switch (voo2) {
        				case "Smiles":
        					repo.AppSmiles.TicketingActivity.OpcaoSmiles.Touch();
        					break;
        				case "Smiles & Money":
        					repo.AppSmiles.TicketingActivity.OpcaoSmilesMoney.Touch();
        					break;
        				default:
        					throw new Exception("Opção seleciona não é válida");
        					break;
        			}
        			repo.AppSmiles.TicketingActivity.BotaoContinuar1.Touch();
        			repo.AppSmiles.TicketingActivity.BotaoContinuar2.Touch();
        		}
        	} catch (Exception e) {
        		Report.Failure("Erro ao selecionar voo. Erro: " + e.Message);
        	}
        }

        public void SelecionarTaxas(string taxas)
        {
        	try {
        		if (!taxas.Equals("") || taxas.Equals("N/A")) {
        			switch (taxas) {
        				case "Dinheiro":
        					repo.AppSmiles.TicketingActivity.TaxasDinheiro.Touch();
        					break;
        				case "Milhas":
        					repo.AppSmiles.TicketingActivity.TaxasMilhas.Touch();
        					break;
        			}
        		}
        	} catch (Exception e) {
        		Report.Failure("Erro ao selecionar taxas. Erro: " + e.Message);
        	}
        }

    }
}