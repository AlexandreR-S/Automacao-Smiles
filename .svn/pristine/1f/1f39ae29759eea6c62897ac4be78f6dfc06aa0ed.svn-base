///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace POCSmiles
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The ComprarMilhas recording.
    /// </summary>
    [TestModule("ab4b173e-ac79-4db8-8256-d6a513f60c1e", ModuleType.Recording, 1)]
    public partial class ComprarMilhas : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SmilesRepository repository.
        /// </summary>
        public static SmilesRepository repo = SmilesRepository.Instance;

        static ComprarMilhas instance = new ComprarMilhas();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public ComprarMilhas()
        {
            CPF = "41031322809";
            Senha = "1010";
            Browser = "Firefox";
            Milhas = "40000";
            NomeTitular = "WELLINGTON SANTANA";
            NumeroCartao = "4111111111111111";
            MesVencimento = "6";
            AnoVencimento = "2016";
            CodigoSeguranca = "737";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static ComprarMilhas Instance
        {
            get { return instance; }
        }

#region Variables

        string _CPF;

        /// <summary>
        /// Gets or sets the value of variable CPF.
        /// </summary>
        [TestVariable("a84dd690-bb0d-4c0c-855e-5e9fd3b7c59f")]
        public string CPF
        {
            get { return _CPF; }
            set { _CPF = value; }
        }

        string _Senha;

        /// <summary>
        /// Gets or sets the value of variable Senha.
        /// </summary>
        [TestVariable("cc5ecf25-727c-4832-b31f-b775deb6924b")]
        public string Senha
        {
            get { return _Senha; }
            set { _Senha = value; }
        }

        string _Browser;

        /// <summary>
        /// Gets or sets the value of variable Browser.
        /// </summary>
        [TestVariable("d67b17eb-5b2b-496b-85a8-331272a01424")]
        public string Browser
        {
            get { return _Browser; }
            set { _Browser = value; }
        }

        string _Milhas;

        /// <summary>
        /// Gets or sets the value of variable Milhas.
        /// </summary>
        [TestVariable("84a66055-27fc-490d-8ca1-660e9e5d5727")]
        public string Milhas
        {
            get { return _Milhas; }
            set { _Milhas = value; }
        }

        string _NomeTitular;

        /// <summary>
        /// Gets or sets the value of variable NomeTitular.
        /// </summary>
        [TestVariable("5f13d092-9361-4ea2-a8bb-ede50f772bd9")]
        public string NomeTitular
        {
            get { return _NomeTitular; }
            set { _NomeTitular = value; }
        }

        string _NumeroCartao;

        /// <summary>
        /// Gets or sets the value of variable NumeroCartao.
        /// </summary>
        [TestVariable("c5fc4152-a653-4784-ac84-4cf7743c4d7f")]
        public string NumeroCartao
        {
            get { return _NumeroCartao; }
            set { _NumeroCartao = value; }
        }

        string _MesVencimento;

        /// <summary>
        /// Gets or sets the value of variable MesVencimento.
        /// </summary>
        [TestVariable("ce82a44e-e74b-40eb-850a-4192119dbb05")]
        public string MesVencimento
        {
            get { return _MesVencimento; }
            set { _MesVencimento = value; }
        }

        string _AnoVencimento;

        /// <summary>
        /// Gets or sets the value of variable AnoVencimento.
        /// </summary>
        [TestVariable("9dec36ac-33ae-4bac-a1ff-035350c3a130")]
        public string AnoVencimento
        {
            get { return _AnoVencimento; }
            set { _AnoVencimento = value; }
        }

        string _CodigoSeguranca;

        /// <summary>
        /// Gets or sets the value of variable CodigoSeguranca.
        /// </summary>
        [TestVariable("964d38be-5e22-4651-acae-2a40e02f70b8")]
        public string CodigoSeguranca
        {
            get { return _CodigoSeguranca; }
            set { _CodigoSeguranca = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable URL.
        /// </summary>
        [TestVariable("aa7b91c3-8944-44bc-a709-ada666e82f1a")]
        public string URL
        {
            get { return repo.URL; }
            set { repo.URL = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SmilesOMelhorProgramaDeMilhasS1.MenuUsuario_Milhas' at Center.", repo.SmilesOMelhorProgramaDeMilhasS1.MenuUsuario_MilhasInfo, new RecordItemIndex(0));
            repo.SmilesOMelhorProgramaDeMilhasS1.MenuUsuario_Milhas.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(1));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SmilesOMelhorProgramaDeMilhasS1.MenuUsuario_ComprarMilhas' at 87;14.", repo.SmilesOMelhorProgramaDeMilhasS1.MenuUsuario_ComprarMilhasInfo, new RecordItemIndex(2));
            repo.SmilesOMelhorProgramaDeMilhasS1.MenuUsuario_ComprarMilhas.Click("87;14");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Escolha a quantidade de milhas que deseja comprar') on item 'SmilesOMelhorProgramaDeMilhasS1.Validacao_EscolhaQuantidadeMilhas'.", repo.SmilesOMelhorProgramaDeMilhasS1.Validacao_EscolhaQuantidadeMilhasInfo, new RecordItemIndex(3));
            Validate.Attribute(repo.SmilesOMelhorProgramaDeMilhasS1.Validacao_EscolhaQuantidadeMilhasInfo, "InnerText", "Escolha a quantidade de milhas que deseja comprar");
            Delay.Milliseconds(100);
            
            SelectItemListBox("//select[#'milesAmountSelect']", Milhas);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 4s.", new RecordItemIndex(5));
            Delay.Duration(4000, false);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 20s for item 'SmilesOMelhorProgramaDeMilhasS1.Mensagem_Aguarde' to not exist.", repo.SmilesOMelhorProgramaDeMilhasS1.Mensagem_AguardeInfo, new ActionTimeout(20000), new RecordItemIndex(6));
            repo.SmilesOMelhorProgramaDeMilhasS1.Mensagem_AguardeInfo.WaitForNotExists(20000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SmilesOMelhorProgramaDeMilhasS1.ComprarMilhas_ComprarMilhas' at 63;24.", repo.SmilesOMelhorProgramaDeMilhasS1.ComprarMilhas_ComprarMilhasInfo, new RecordItemIndex(7));
            repo.SmilesOMelhorProgramaDeMilhasS1.ComprarMilhas_ComprarMilhas.Click("63;24");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 4s.", new RecordItemIndex(8));
            Delay.Duration(4000, false);
            
            Report.Log(ReportLevel.Info, "Invoke Action", "Invoking EnsureVisible() on item 'SmilesOMelhorProgramaDeMilhasS1.ComprarMilhas_Visa'.", repo.SmilesOMelhorProgramaDeMilhasS1.ComprarMilhas_VisaInfo, new RecordItemIndex(9));
            repo.SmilesOMelhorProgramaDeMilhasS1.ComprarMilhas_Visa.EnsureVisible();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SmilesOMelhorProgramaDeMilhasS1.ComprarMilhas_Visa' at 5;6.", repo.SmilesOMelhorProgramaDeMilhasS1.ComprarMilhas_VisaInfo, new RecordItemIndex(10));
            repo.SmilesOMelhorProgramaDeMilhasS1.ComprarMilhas_Visa.Click("5;6");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(11));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$NomeTitular' with focus on 'SmilesOMelhorProgramaDeMilhasS1.ComprarMilhas_NomeTitular'.", repo.SmilesOMelhorProgramaDeMilhasS1.ComprarMilhas_NomeTitularInfo, new RecordItemIndex(12));
            repo.SmilesOMelhorProgramaDeMilhasS1.ComprarMilhas_NomeTitular.PressKeys(NomeTitular, 25);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$NumeroCartao' with focus on 'SmilesOMelhorProgramaDeMilhasS1.ComprarMilhas_NumeroCartao'.", repo.SmilesOMelhorProgramaDeMilhasS1.ComprarMilhas_NumeroCartaoInfo, new RecordItemIndex(13));
            repo.SmilesOMelhorProgramaDeMilhasS1.ComprarMilhas_NumeroCartao.PressKeys(NumeroCartao, 25);
            Delay.Milliseconds(0);
            
            SelectItemListBox("//select[#'expirationMonth']", MesVencimento);
            Delay.Milliseconds(0);
            
            SelectItemListBox("//select[#'expirationYear']", AnoVencimento);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$CodigoSeguranca' with focus on 'SmilesOMelhorProgramaDeMilhasS1.ComprarMilhas_CodigoSeguranca'.", repo.SmilesOMelhorProgramaDeMilhasS1.ComprarMilhas_CodigoSegurancaInfo, new RecordItemIndex(16));
            repo.SmilesOMelhorProgramaDeMilhasS1.ComprarMilhas_CodigoSeguranca.PressKeys(CodigoSeguranca, 25);
            Delay.Milliseconds(20);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Next down}'.", new RecordItemIndex(17));
            Keyboard.Press("{Next down}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Next up}'.", new RecordItemIndex(18));
            Keyboard.Press("{Next up}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SmilesOMelhorProgramaDeMilhasS1.ComprarMilhas_Processar' at 85;16.", repo.SmilesOMelhorProgramaDeMilhasS1.ComprarMilhas_ProcessarInfo, new RecordItemIndex(19));
            repo.SmilesOMelhorProgramaDeMilhasS1.ComprarMilhas_Processar.Click("85;16");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Milhas compradas com sucesso.') on item 'SmilesOMelhorProgramaDeMilhasS1.Validacao_MilhasCompradasSucesso'.", repo.SmilesOMelhorProgramaDeMilhasS1.Validacao_MilhasCompradasSucessoInfo, new RecordItemIndex(20));
            Validate.Attribute(repo.SmilesOMelhorProgramaDeMilhasS1.Validacao_MilhasCompradasSucessoInfo, "InnerText", "Milhas compradas com sucesso.");
            Delay.Milliseconds(100);
            
            Report.Screenshot(ReportLevel.Success, "User", "", null, false, new RecordItemIndex(21));
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
