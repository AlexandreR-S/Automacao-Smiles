///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
// 
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Drawing;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading;
using WinForms = System.Windows.Forms;
using Microsoft.SqlServer.Server;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Repository;
using Ranorex.Core.Testing;

namespace POCSmiles.GIFT
{
    public partial class CriarEvento
    {
        /// <summary>
        /// This method gets called right after the recording has been started.
        /// It can be used to execute recording specific initialization code.
        /// </summary>
        private void Init()
        {
            // Your recording specific initialization code goes here.
        }

        public void anexarArquivo(string arquivo, string webElement)
        {
        	try {
        		if(arquivo.Equals(""))
        		{
        			return;
        		}
        		Report.Log(ReportLevel.Info,"Attaching file '" + arquivo + "'");
        		Smiles_UserCode.anexarArquivo(repo.SmilesOMelhorProgramaDeMilhasS1.AbsoluteBasePath.ToResolvedString() + webElement, arquivo,repo);
        		Report.Log(ReportLevel.Info,"File attached");
        	} catch (Exception e) {
        		Report.Error("SolicitarMilhas - Error launched trying to insert " + arquivo + ". Error: " + e.Message);
        		Ranorex.Validate.Fail("SolicitarMilhas.anexarArquivo");
        	}
        }

        public void SelectOptionComboBox(string reference)
        {
        	try {
        		Report.Info("Selecting " + reference);
        		Utils.ClickElement(repo.SmilesOMelhorProgramaDeMilhasS1.AbsoluteBasePath.ToResolvedString() + "//label[@innertext~'" + reference + "']");
        		Report.Info(reference + " selected");
        	} catch (Exception) {
        		Ranorex.Validate.Fail("Erro trying to select '" + reference + "'");
        	}
        }
        
        public void SelectItemListBox(string selectElement, string item){
        	try {
        		Report.Info("Selecting " + item);
        		Utils.SelectItemListBoxAsHuman(repo.SmilesOMelhorProgramaDeMilhasS1.AbsoluteBasePath.ToResolvedString() + selectElement, item,"1");
        		Report.Info(item + " selected");
        	} catch (Exception) {
        		Ranorex.Validate.Fail("Erro trying to select '" + item + "'");
        		
        	}
        }
        
        public void SelectDateCalendar(string date, string calendar){
        	try 
        	{
        		if(date.Equals(""))
        		{
        			return;
        		}
        		
        		Report.Info("Selectiong date on calendar with date: " + date);
        		WebElement eCalendar = repo.SmilesOMelhorProgramaDeMilhasS1.AbsoluteBasePath.ToResolvedString() + calendar;
        		eCalendar.EnsureVisible();
        		eCalendar.Click(Duration.FromMilliseconds(1));
        		System.DateTime newDate;
        		if (date.Contains("d+")) 
        		{
        			newDate = System.DateTime.Today.AddDays(int.Parse(date.Replace("d+","")));
        		}else
        		{
        			newDate = System.DateTime.Parse(date);
        		}
				Smiles_UserCode.SetCalendarDate(newDate.ToString(),repo);
				Report.Info("Date: " + date + " selected");
        	} catch (Exception) {
        		Ranorex.Validate.Fail("Error launched trying to select date " + date);
        	}
        }

        public void UserTypeKeys(string texto, string objeto)
        {
            try {
        		if (texto.Equals("")) {
        			return;
        		}
        		Report.Info("inserting text '" + texto + "'");
        		if (texto.ToUpper().Equals("ALEATORIO")) {
        			texto = "EVENTO_ROBO_" + System.DateTime.Now.ToString("yyyyMMddhhmmss");
        			_NomeEvento = texto;
        		}
        		WebElement element = repo.SmilesOMelhorProgramaDeMilhasS1.AbsoluteBasePath.ToResolvedString() + objeto;
        		element.PressKeys(texto, Duration.FromMilliseconds(1));
            } catch (Exception) {
        		Ranorex.Report.Failure("Error trying to insert text '" + texto + "' in " + objeto);
            }
        }

    }
}