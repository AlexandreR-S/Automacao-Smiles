///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
// 
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Drawing;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading;
using WinForms = System.Windows.Forms;
using POCSmiles.Resultado_Esperado;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Repository;
using Ranorex.Core.Testing;

namespace POCSmiles.Resultado_Esperado
{
    public partial class RP_ValidacaoEmissao
    {
        /// <summary>
        /// This method gets called right after the recording has been started.
        /// It can be used to execute recording specific initialization code.
        /// </summary>
        
        private void Init()
        {
            // Your recording specific initialization code goes here.
        }
        
        private void FocusModalMenssage()
        {
        	if (Utils.CheckExist(repo.SmilesOMelhorProgramaDeMilhasS1.Mensagem_CaixaMensagemInfo.AbsolutePath.ToResolvedString(),1000)) {
        	    	Report.Screenshot(repo.SmilesOMelhorProgramaDeMilhasS1.Mensagem_CaixaMensagem);
        	}
        }
        
        //Variáveis iniciadas pelo modulo "VC_Pedido"
        public static string _voo1 = "";
		public static string _voo2 = "";
		public static string _tarifaPorAdultoMilhas = "0";
		public static string _tarifaPorAdultoDinheiro = "0,00";
		public static string _taxasDinheiro = "0,00";
		public static string _taxasMilhas = "0";
		public static string _passenger1 = "";
		
        private void ValidateResult(string _adults, string _origen, string _destiny, string _origen2, string _destiny2, string _titularCartao, string _payment){
        	try {
        		Report.Info("Validating data");
		        SalvarDadosExcel.voo1 = "";
		        SalvarDadosExcel.voo2 = "";
		        SalvarDadosExcel.tAdultoDinheiro = "";
		        SalvarDadosExcel.tAdultoMilhas = "";
		        SalvarDadosExcel.taxasDinheiro = "";
		        SalvarDadosExcel.taxasMilhas = ""; 
        		if (!_voo1.Equals("")) {
					if(!Utils.CheckExist(repo.SmilesOMelhorProgramaDeMilhasS1.PValidacao_EmissaoSuaViagemInfo.AbsolutePath.ToResolvedString(),"InnerText",_voo1.Split("/".ToCharArray()[0])[0].Trim(),1000)){
        				Report.Error("Error trying to find '" + _voo1 + "'");
        			}
        			SalvarDadosExcel.voo1 = _voo1;
        		}
        		if (!_voo2.Equals("")) {
        			if(!Utils.CheckExist(repo.SmilesOMelhorProgramaDeMilhasS1.PValidacao_EmissaoSuaViagemInfo.AbsolutePath.ToResolvedString(),"InnerText",_voo2.Split("/".ToCharArray()[0])[0],1000)){
        				Report.Error("Error trying to find '" + _voo2 + "'");
        			}
        			SalvarDadosExcel.voo2 = _voo2;
        		}
        		if (!_passenger1.Equals("")) {
        			if(!Utils.CheckExist(repo.SmilesOMelhorProgramaDeMilhasS1.PValidacao_EmissaoSuaViagemInfo.AbsolutePath.ToResolvedString(),"InnerText","(?i)" + _passenger1 + "(?-i)",1000)){
        				Report.Error("Error trying to find '" + _passenger1 + "'");
        			}
        		}
        		if (!_titularCartao.Equals("")) {
        			if(!Utils.CheckExist(repo.SmilesOMelhorProgramaDeMilhasS1.PValidacao_EmissaoDadosCompraInfo.AbsolutePath.ToResolvedString(),"InnerText",_titularCartao,1000)){
        				Report.Error("Error trying to find '" + _titularCartao + "'");
        			}
        		}
        		if (!_payment.Equals("")) {
        			if(!Utils.CheckExist(repo.SmilesOMelhorProgramaDeMilhasS1.PValidacao_EmissaoDadosCompraInfo.AbsolutePath.ToResolvedString(),"InnerText",_payment,1000)){
        				Report.Error("Error trying to find '" + _payment + "'");
        			}
        		}
        		
        		if (!_adults.Equals("")) {
        			int totalAdultos = int.Parse(_adults);
					string totalDinheiro = string.Format("{0:C}",(_tarifaPorAdultoDinheiro.Equals("")?0:double.Parse(_tarifaPorAdultoDinheiro) * totalAdultos) + (_taxasDinheiro.Equals("")?0:double.Parse(_taxasDinheiro.ToString().Replace(".",","))));
					string totalMilhas = string.Format("{0:N}",(_tarifaPorAdultoMilhas.Equals("")?0:double.Parse(_tarifaPorAdultoMilhas) * totalAdultos) + (_taxasMilhas.Equals("")?0:double.Parse(_taxasMilhas)));
					if(!Utils.CheckExist(repo.SmilesOMelhorProgramaDeMilhasS1.PValidacao_EmissaoDadosCompraInfo.AbsolutePath.ToResolvedString(),"InnerText",totalDinheiro.Replace("$","\\$"),1000)){
        				Report.Error("Error trying to find '" + totalDinheiro + "'");
        			}
        			if(!Utils.CheckExist(repo.SmilesOMelhorProgramaDeMilhasS1.PValidacao_EmissaoDadosCompraInfo.AbsolutePath.ToResolvedString(),"InnerText", totalMilhas.Replace(",00",""),1000)){
						Report.Error("Error trying to find '" + totalMilhas.Replace(",00","") + "'");
        			}
					SalvarDadosExcel.tAdultoDinheiro = _tarifaPorAdultoDinheiro;
			        SalvarDadosExcel.tAdultoMilhas = _tarifaPorAdultoMilhas;
			        SalvarDadosExcel.taxasDinheiro = _taxasDinheiro;
			        SalvarDadosExcel.taxasMilhas = _taxasMilhas; 
        		}
        		Report.Info("Data validated");
        	} catch (Exception e) {
        		Report.Error("RP_ValidacaoEmissao - Error capturing validating emissao. Error:"  + e.Message);
        		throw new System.Exception("RP_ValidacaoEmissao.ValidateResult");
        	}
        }
    }
}