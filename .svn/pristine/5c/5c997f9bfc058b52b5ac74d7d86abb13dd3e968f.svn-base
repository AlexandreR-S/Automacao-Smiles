///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace POCSmiles.Selecao_De_Voos
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The SelecionarVooGateway recording.
    /// </summary>
    [TestModule("24f34366-37e3-47d8-9659-9c60cbe4c29b", ModuleType.Recording, 1)]
    public partial class SelecionarVooGateway : ITestModule
    {
        /// <summary>
        /// Holds an instance of the POCSmiles.SmilesRepository repository.
        /// </summary>
        public static POCSmiles.SmilesRepository repo = POCSmiles.SmilesRepository.Instance;

        static SelecionarVooGateway instance = new SelecionarVooGateway();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public SelecionarVooGateway()
        {
            TipoPagamentoTaxas = "";
            TipoPagamentoVooVolta = "";
            TipoPagamentoVooIda = "";
            SiglaCompanhiaAereaIda = "";
            SiglaCompanhiaAereaVolta = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static SelecionarVooGateway Instance
        {
            get { return instance; }
        }

#region Variables

        string _TipoPagamentoTaxas;

        /// <summary>
        /// Gets or sets the value of variable TipoPagamentoTaxas.
        /// </summary>
        [TestVariable("28ec59d8-ad30-4a1d-ae63-38455112347f")]
        public string TipoPagamentoTaxas
        {
            get { return _TipoPagamentoTaxas; }
            set { _TipoPagamentoTaxas = value; }
        }

        string _TipoPagamentoVooVolta;

        /// <summary>
        /// Gets or sets the value of variable TipoPagamentoVooVolta.
        /// </summary>
        [TestVariable("826d864f-298a-4bcf-8b99-c9d81ce06bb0")]
        public string TipoPagamentoVooVolta
        {
            get { return _TipoPagamentoVooVolta; }
            set { _TipoPagamentoVooVolta = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable URL.
        /// </summary>
        [TestVariable("aa7b91c3-8944-44bc-a709-ada666e82f1a")]
        public string URL
        {
            get { return repo.URL; }
            set { repo.URL = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable TipoPagamentoVooIda.
        /// </summary>
        [TestVariable("3db5c437-21b6-4a76-a600-8e34f1be6e63")]
        public string TipoPagamentoVooIda
        {
            get { return repo.TipoPagamentoVooIda; }
            set { repo.TipoPagamentoVooIda = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable SiglaCompanhiaAereaIda.
        /// </summary>
        [TestVariable("e144315f-e99a-473a-b58a-8c1efd026cb8")]
        public string SiglaCompanhiaAereaIda
        {
            get { return repo.SiglaCompanhiaAereaIda; }
            set { repo.SiglaCompanhiaAereaIda = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable SiglaCompanhiaAereaVolta.
        /// </summary>
        [TestVariable("068dfcea-0640-4b7e-9ddd-01baafb1535e")]
        public string SiglaCompanhiaAereaVolta
        {
            get { return repo.SiglaCompanhiaAereaVolta; }
            set { repo.SiglaCompanhiaAereaVolta = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            SelectFlyPayment(TipoPagamentoVooIda, "IDA", SiglaCompanhiaAereaIda);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(1));
            Delay.Duration(1000, false);
            
            WaitSmilesLoad();
            Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(3));
            //Delay.Duration(1000, false);
            
            //Report.Log(ReportLevel.Info, "Wait", "Waiting 1m for item 'SmilesOMelhorProgramaDeMilhasS1.PValidacao_Aguarde' to not exist.", repo.SmilesOMelhorProgramaDeMilhasS1.PValidacao_AguardeInfo, new ActionTimeout(60000), new RecordItemIndex(4));
            //repo.SmilesOMelhorProgramaDeMilhasS1.PValidacao_AguardeInfo.WaitForNotExists(60000);
            
            SelectFlyPayment(TipoPagamentoVooVolta, "VOLTA", SiglaCompanhiaAereaVolta);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(6));
            Delay.Duration(1000, false);
            
            WaitSmilesLoad();
            Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(8));
            //Delay.Duration(1000, false);
            
            //Report.Log(ReportLevel.Info, "Wait", "Waiting 1m for item 'SmilesOMelhorProgramaDeMilhasS1.PValidacao_Aguarde' to not exist.", repo.SmilesOMelhorProgramaDeMilhasS1.PValidacao_AguardeInfo, new ActionTimeout(60000), new RecordItemIndex(9));
            //repo.SmilesOMelhorProgramaDeMilhasS1.PValidacao_AguardeInfo.WaitForNotExists(60000);
            
            SelectRatePayment(TipoPagamentoTaxas);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 500ms.", new RecordItemIndex(11));
            Delay.Duration(500, false);
            
            WaitSmilesLoad();
            Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(13));
            //Delay.Duration(1000, false);
            
            //Report.Log(ReportLevel.Info, "Wait", "Waiting 1m for item 'SmilesOMelhorProgramaDeMilhasS1.PValidacao_Aguarde' to not exist.", repo.SmilesOMelhorProgramaDeMilhasS1.PValidacao_AguardeInfo, new ActionTimeout(60000), new RecordItemIndex(14));
            //repo.SmilesOMelhorProgramaDeMilhasS1.PValidacao_AguardeInfo.WaitForNotExists(60000);
            
            SelectCheckBox("//div[@class='boarding-details']//input[@type='checkbox'][1]", "true");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SmilesOMelhorProgramaDeMilhasS1.SelecionarVoo_Continuar1' at 63;15.", repo.SmilesOMelhorProgramaDeMilhasS1.SelecionarVoo_Continuar1Info, new RecordItemIndex(16));
            repo.SmilesOMelhorProgramaDeMilhasS1.SelecionarVoo_Continuar1.Click("63;15", 1);
            Delay.Milliseconds(490);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3s.", new RecordItemIndex(17));
            Delay.Duration(3000, false);
            
            WaitPageLoad();
            Delay.Milliseconds(0);
            
            ClickIfExist();
            Delay.Milliseconds(0);
            
            Report.Screenshot(ReportLevel.Success, "User", "", null, false, new RecordItemIndex(20));
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
