///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace POCSmiles.Mobile.RxBrowser.BuscarVoo
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The BuscarVoo recording.
    /// </summary>
    [TestModule("5ac16ca9-879e-4f91-8571-2192030237af", ModuleType.Recording, 1)]
    public partial class BuscarVoo : ITestModule
    {
        /// <summary>
        /// Holds an instance of the POCSmiles.SmilesRepository repository.
        /// </summary>
        public static POCSmiles.SmilesRepository repo = POCSmiles.SmilesRepository.Instance;

        static BuscarVoo instance = new BuscarVoo();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public BuscarVoo()
        {
            De1 = "";
            TipoTrajeto = "";
            Para1 = "";
            De2 = "";
            Para2 = "";
            QuantidadeAdultos = "";
            QuantidadeCriancas = "";
            QuantidadeBebes = "";
            DataPartida1 = "";
            DataRetorno1 = "";
            DataPartida2 = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static BuscarVoo Instance
        {
            get { return instance; }
        }

#region Variables

        string _QuantidadeAdultos;

        /// <summary>
        /// Gets or sets the value of variable QuantidadeAdultos.
        /// </summary>
        [TestVariable("55b6dd55-e591-4794-87b1-fa88c5459aa6")]
        public string QuantidadeAdultos
        {
            get { return _QuantidadeAdultos; }
            set { _QuantidadeAdultos = value; }
        }

        string _QuantidadeCriancas;

        /// <summary>
        /// Gets or sets the value of variable QuantidadeCriancas.
        /// </summary>
        [TestVariable("54697ea7-ae8d-4267-9a4b-a39e4b26c26a")]
        public string QuantidadeCriancas
        {
            get { return _QuantidadeCriancas; }
            set { _QuantidadeCriancas = value; }
        }

        string _QuantidadeBebes;

        /// <summary>
        /// Gets or sets the value of variable QuantidadeBebes.
        /// </summary>
        [TestVariable("84d682d1-60a4-4660-a201-b339c94f8472")]
        public string QuantidadeBebes
        {
            get { return _QuantidadeBebes; }
            set { _QuantidadeBebes = value; }
        }

        string _DataPartida1;

        /// <summary>
        /// Gets or sets the value of variable DataPartida1.
        /// </summary>
        [TestVariable("cbcd5349-eceb-4661-9a62-29fae69fe89a")]
        public string DataPartida1
        {
            get { return _DataPartida1; }
            set { _DataPartida1 = value; }
        }

        string _DataRetorno1;

        /// <summary>
        /// Gets or sets the value of variable DataRetorno1.
        /// </summary>
        [TestVariable("e977c0e9-ff6e-4b7b-afcd-2e7ecad74e80")]
        public string DataRetorno1
        {
            get { return _DataRetorno1; }
            set { _DataRetorno1 = value; }
        }

        string _DataPartida2;

        /// <summary>
        /// Gets or sets the value of variable DataPartida2.
        /// </summary>
        [TestVariable("755f1d36-803e-4a5f-a568-084eb12b4e6e")]
        public string DataPartida2
        {
            get { return _DataPartida2; }
            set { _DataPartida2 = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Dispositivo.
        /// </summary>
        [TestVariable("da3e43bb-7e4d-42d3-af80-4010368868c5")]
        public string Dispositivo
        {
            get { return repo.Dispositivo; }
            set { repo.Dispositivo = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable De1.
        /// </summary>
        [TestVariable("033e8020-abc8-4612-8169-1362a93dc080")]
        public string De1
        {
            get { return repo.De1; }
            set { repo.De1 = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable TipoTrajeto.
        /// </summary>
        [TestVariable("75890ee5-4ccb-4c1e-bac9-a663b8766655")]
        public string TipoTrajeto
        {
            get { return repo.TipoTrajeto; }
            set { repo.TipoTrajeto = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Para1.
        /// </summary>
        [TestVariable("2f0d4e63-a22c-41ce-bfaa-f1f729631e4d")]
        public string Para1
        {
            get { return repo.Para1; }
            set { repo.Para1 = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable De2.
        /// </summary>
        [TestVariable("e9f94c08-c23a-4592-bc06-fc518386f0a4")]
        public string De2
        {
            get { return repo.De2; }
            set { repo.De2 = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Para2.
        /// </summary>
        [TestVariable("ad6c786b-1398-4c47-8708-0587e24710d5")]
        public string Para2
        {
            get { return repo.Para2; }
            set { repo.Para2 = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Touch", "Touch item 'RxBrowser.Dom.Home_MenuPrincipal' at Center", repo.RxBrowser.Dom.Home_MenuPrincipalInfo, new RecordItemIndex(0));
            repo.RxBrowser.Dom.Home_MenuPrincipal.Touch();
            Delay.Milliseconds(500);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(1));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s for item 'RxBrowser.Dom' to exist.", repo.RxBrowser.Dom.SelfInfo, new ActionTimeout(30000), new RecordItemIndex(2));
            repo.RxBrowser.Dom.SelfInfo.WaitForExists(30000);
            
            WaitForDocumentLoad();
            Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Invoke Action", "Invoking WaitForDocumentLoaded() on item 'RxBrowser.Dom'.", repo.RxBrowser.Dom.SelfInfo, new RecordItemIndex(4));
            //repo.RxBrowser.Dom.Self.WaitForDocumentLoaded();
            //Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'RxBrowser.Dom.MenuPrincipal_BuscarVoo' at Center", repo.RxBrowser.Dom.MenuPrincipal_BuscarVooInfo, new RecordItemIndex(5));
            repo.RxBrowser.Dom.MenuPrincipal_BuscarVoo.Touch();
            Delay.Milliseconds(500);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(6));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(7));
            Delay.Duration(5000, false);
            
            //Report.Log(ReportLevel.Info, "Wait", "Waiting 30s for item 'RxBrowser.Dom.MenuPrincipal_BuscarVoo' to not exist.", repo.RxBrowser.Dom.MenuPrincipal_BuscarVooInfo, new ActionTimeout(30000), new RecordItemIndex(8));
            //repo.RxBrowser.Dom.MenuPrincipal_BuscarVooInfo.WaitForNotExists(30000);
            
            WaitForDocumentLoad();
            Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Invoke Action", "Invoking WaitForDocumentLoaded() on item 'RxBrowser.Dom'.", repo.RxBrowser.Dom.SelfInfo, new RecordItemIndex(10));
            //repo.RxBrowser.Dom.Self.WaitForDocumentLoaded();
            //Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3s.", new RecordItemIndex(11));
            Delay.Duration(3000, false);
            
            WaitForDocumentLoad();
            Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Invoke Action", "Invoking WaitForDocumentLoaded() on item 'RxBrowser.Dom'.", repo.RxBrowser.Dom.SelfInfo, new RecordItemIndex(13));
            //repo.RxBrowser.Dom.Self.WaitForDocumentLoaded();
            //Delay.Milliseconds(0);
            
            setText(De1, "//input[#'inputOrigin']", "true");
            Delay.Milliseconds(0);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.RxBrowser.Self, false, new RecordItemIndex(15));
            
            selectTipoTrajeto(TipoTrajeto);
            Delay.Milliseconds(0);
            
            setText(Para1, "//input[#'inputDestination']", "true");
            Delay.Milliseconds(0);
            
            setText(De2, "//input[#'inputOriginMs2']", "true");
            Delay.Milliseconds(0);
            
            setText(Para2, "//input[#'inputDestinationMs2']", "true");
            Delay.Milliseconds(0);
            
            selectDate(DataPartida1, "//input[@id<'departure_date' or @id<'ms1_date']");
            Delay.Milliseconds(0);
            
            selectDate(DataRetorno1, "//input[@id<'return_date' or @id<'ms2_date']");
            Delay.Milliseconds(0);
            
            selectDate(DataPartida2, "//input[@id<'return_date' or @id<'ms2_date']");
            Delay.Milliseconds(0);
            
            selectPassengers(QuantidadeAdultos, QuantidadeCriancas, QuantidadeBebes);
            Delay.Milliseconds(0);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.RxBrowser.Self, false, new RecordItemIndex(24));
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'RxBrowser.Dom.Button_BuscarVoo' at Center", repo.RxBrowser.Dom.Button_BuscarVooInfo, new RecordItemIndex(25));
            repo.RxBrowser.Dom.Button_BuscarVoo.Touch();
            Delay.Milliseconds(500);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.RxBrowser.Self, false, new RecordItemIndex(26));
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
