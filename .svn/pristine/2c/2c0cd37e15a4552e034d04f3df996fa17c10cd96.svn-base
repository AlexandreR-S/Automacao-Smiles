///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
// 
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Drawing;
using System.Globalization;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Repository;
using Ranorex.Core.Testing;

namespace POCSmiles.Mobile.AppSmiles.Passageiros
{
    public partial class InserirPassageiros
    {
        /// <summary>
        /// This method gets called right after the recording has been started.
        /// It can be used to execute recording specific initialization code.
        /// </summary>
        private void Init()
        {
            // Your recording specific initialization code goes here.
        }

        public void InsertPassengers(string index, string name, string lastName, string genrer, string birthday, string email, string numPassporte, string vencimentoPassaporte, string paisEmissor)
        {
        	try 
        	{
        		if (!name.Equals(""))
	    		{
        			return;
        		}
        		Text el = repo.AppSmiles.TicketingActivity.DadosDoAdultoXXXInfo.AbsolutePath.ToResolvedString().Replace("'xxx'",index);
        		el.Touch();
        		var currCultureInfo = CultureInfo.CreateSpecificCulture("pt-br");
	    		if (!name.Equals(""))
	    		{
	    			repo.AppSmiles.PassengerActivity.Nome.Element.SetAttributeValue("Text",name);
	    		}
	    		if (!lastName.Equals(""))
	    		{
	    			repo.AppSmiles.PassengerActivity.Sobrenome.Element.SetAttributeValue("Text",lastName);
	    		}
	    		if (!genrer.Equals(""))
	    		{
	    			switch (genrer) {
	    				case "Masculino":
	    					repo.AppSmiles.PassengerActivity.CheckBoxMasculino.Touch();
	    					break;
	    				case "Feminino":
	    					repo.AppSmiles.PassengerActivity.CheckBoxFeminino.Touch();
	    					break;
	    				default:
	    					throw new Exception("Valor de gênero selecionado não é válido");
	    			}
	    		}
	    		if (!birthday.Equals(""))
				{
	    			repo.AppSmiles.PassengerActivity.DataNascimento.Element.SetAttributeValue("Text",lastName);
				}
	    		if (!email.Equals(""))
	    		{
	    			repo.AppSmiles.PassengerActivity.Email.Element.SetAttributeValue("Text",lastName);
	    		}
		    	if (!numPassporte.Equals("")) {
	    			repo.AppSmiles.PassengerActivity.NPassaporte.Element.SetAttributeValue("Text",lastName);
		    	}
    		    if (!vencimentoPassaporte.Equals("")) {
	    			repo.AppSmiles.PassengerActivity.VencimentoPassaporte.Element.SetAttributeValue("Text",lastName);
    		    }
    		    if (!paisEmissor.Equals("")) {
	    			repo.AppSmiles.PassengerActivity.PaisEmissor.Element.SetAttributeValue("Text",lastName);
    		    }
	    		Report.Screenshot(repo.AppSmiles.Self);
	    		repo.AppSmiles.PassengerActivity.BotaoSalvar.Touch();
        	} 
        	catch (Exception e)
        	{
        		Report.Failure("Erro inserindo passageiros. Error: " + e.Message);
        	}
        }

        

    }
}