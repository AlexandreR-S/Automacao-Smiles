///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
// 
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Drawing;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading;
using WinForms = System.Windows.Forms;
using Microsoft.Office.Interop.Excel;
using POCSmiles.Base_Dados;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Repository;
using Ranorex.Core.Testing;

namespace POCSmiles.Resultado_Esperado
{
    public partial class SalvarReport
    {
        /// <summary>
        /// This method gets called right after the recording has been started.
        /// It can be used to execute recording specific initialization code.
        /// </summary>
        private void Init()
        {
            // Your recording specific initialization code goes here.
        }

        public void CreateReportShortcut()
        {
        	Ranorex.Core.Reporting.TestReport.SaveReport();
        	System.IO.File.WriteAllText(@"C:\Automacao - Smiles\Executions\" + Ranorex.Core.Reporting.TestReport.ReportEnvironment.ReportName + " " + TestCaseNode.Current.Name + ".bat", "\"" + Ranorex.Core.Reporting.TestReport.ReportEnvironment.ReportFileDirectory + "\\" + Ranorex.Core.Reporting.TestReport.ReportEnvironment.ReportName + ".html\"");
        }

        public void AtualizarMilhasBD(string CPFSmilesID, string URL)
        {
        	try {
        		if (!CPFSmilesID.Equals("")) {
        			Smiles_UserCode.AtualizarMilhasBD(CPFSmilesID, URL, repo);
        		}
        	}catch (Exception e) {
        		Report.Warn("Database query execution  exception- Error updating user in data base: " + e.Message);	
        	}
        }

        public void AtualizarStatusCasoDeTesteDB(string browser, string identificacaoCaso)
        {
        	try {
        		if (identificacaoCaso.Equals("")) {
        			return;
        		}
        		if (browser.ToUpper().Equals("mozilla")) {
        			browser = "FIREFOX";
        		}
        		string report = "file://" + Ranorex.Core.Reporting.TestReport.ReportEnvironment.ReportFileDirectory + "\\" + Ranorex.Core.Reporting.TestReport.ReportEnvironment.ReportName + ".rxzlog";
        		if (Base_Dados.UtilsDB.checkExist("SELECT * FROM CONTROLE_EXECUCAO WHERE NOME_CASO_TESTE LIKE '" + identificacaoCaso + "'")) {
        			switch (TestCaseNode.Current.Status) {
        				case Ranorex.Core.Reporting.ActivityStatus.Success:
        					Base_Dados.UtilsDB.updateControleExecucao(browser.ToUpper(), identificacaoCaso,"OK",report);
        					break;
        				case Ranorex.Core.Reporting.ActivityStatus.Failed:
        					Base_Dados.UtilsDB.updateControleExecucao(browser.ToUpper(), identificacaoCaso, "NOK",report);
        					break;
        				case Ranorex.Core.Reporting.ActivityStatus.Ignored:
        					Base_Dados.UtilsDB.updateControleExecucao(browser.ToUpper(), identificacaoCaso, "NE",report);
        					break;
        				default:
        					throw new Exception("Invalid value for ActivityStatus");
        			}
        		}else{
        			Base_Dados.UtilsDB.insertControleExecucao(identificacaoCaso);
        			Delay.Seconds(1);
        			switch (TestCaseNode.Current.Status) {
        				case Ranorex.Core.Reporting.ActivityStatus.Success:
        					Base_Dados.UtilsDB.updateControleExecucao(browser.ToUpper(), identificacaoCaso,"OK",report);
        					break;
        				case Ranorex.Core.Reporting.ActivityStatus.Failed:
        					Base_Dados.UtilsDB.updateControleExecucao(browser.ToUpper(), identificacaoCaso, "NOK",report);
        					break;
        				case Ranorex.Core.Reporting.ActivityStatus.Ignored:
        					Base_Dados.UtilsDB.updateControleExecucao(browser.ToUpper(), identificacaoCaso, "NE",report);
        					break;
        				default:
        					throw new Exception("Invalid value for ActivityStatus");
        			}
        		}
        		
        	} catch (Exception e) {
        		Report.Error("An exception launched trying to update test case status: " + e.Message);	
        	}
        }

        public void StopThreadas()
        {
        }

        public void StopThreads()
        {
        }

        public void SalvarTempoExecucao()
        {
        	try {
        		TimeSpan diferenca = System.DateTime.Now.Subtract(InitSetup.inicioExecucao);
        		if (InitSetup.gravarTempo == true) {
        			Base_Dados.UtilsDB.salvarTempoExecucao(Ranorex.Core.Testing.TestCaseNode.Current.Name.Trim(), (int)diferenca.TotalMilliseconds, Ranorex.Core.Testing.TestCaseNode.Current.Status);
        		}
        		IniciarEstimativa.formP.incrementProgress(1);
        	} catch (Exception e) {
        		Report.Warn("Error trying to update database. Error: " + e.Message + ". Origem: " + e.StackTrace);
        	}
        }

    }
}