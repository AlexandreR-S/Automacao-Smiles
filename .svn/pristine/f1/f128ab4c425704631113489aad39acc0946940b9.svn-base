///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace POCSmiles.Mobile.AppSmiles.InicializacaoApp
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Login recording.
    /// </summary>
    [TestModule("091e241e-7d4d-4efd-9336-d83dea321746", ModuleType.Recording, 1)]
    public partial class Login : ITestModule
    {
        /// <summary>
        /// Holds an instance of the POCSmiles.SmilesMobileRepository repository.
        /// </summary>
        public static POCSmiles.SmilesMobileRepository repo = POCSmiles.SmilesMobileRepository.Instance;

        static Login instance = new Login();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Login()
        {
            Dispositivo = "A5";
            CPFSmilesID = "";
            Senha = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Login Instance
        {
            get { return instance; }
        }

#region Variables

        string _Dispositivo;

        /// <summary>
        /// Gets or sets the value of variable Dispositivo.
        /// </summary>
        [TestVariable("6a0e3889-23e6-48bf-8d6f-38d6269b6287")]
        public string Dispositivo
        {
            get { return _Dispositivo; }
            set { _Dispositivo = value; }
        }

        string _CPFSmilesID;

        /// <summary>
        /// Gets or sets the value of variable CPFSmilesID.
        /// </summary>
        [TestVariable("6c765fe4-7b96-4dab-9103-c3b46e485bf1")]
        public string CPFSmilesID
        {
            get { return _CPFSmilesID; }
            set { _CPFSmilesID = value; }
        }

        string _Senha;

        /// <summary>
        /// Gets or sets the value of variable Senha.
        /// </summary>
        [TestVariable("ae725ec2-b0bc-41ad-9080-5e75902cbcef")]
        public string Senha
        {
            get { return _Senha; }
            set { _Senha = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Set Value", "Setting attribute Text to '$CPFSmilesID' on item 'AppSmiles.FormLogin.Login_Usuario'.", repo.AppSmiles.FormLogin.Login_UsuarioInfo, new RecordItemIndex(0));
            repo.AppSmiles.FormLogin.Login_Usuario.Element.SetAttributeValue("Text", CPFSmilesID);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Set Value", "Setting attribute Text to '$Senha' on item 'AppSmiles.FormLogin.Login_Senha'.", repo.AppSmiles.FormLogin.Login_SenhaInfo, new RecordItemIndex(1));
            repo.AppSmiles.FormLogin.Login_Senha.Element.SetAttributeValue("Text", Senha);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'AppSmiles.FormLogin.BotaoEntrar' at Center", repo.AppSmiles.FormLogin.BotaoEntrarInfo, new RecordItemIndex(2));
            repo.AppSmiles.FormLogin.BotaoEntrar.Touch();
            Delay.Milliseconds(500);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'AppSmiles.FormHome.OLA'.", repo.AppSmiles.FormHome.OLAInfo, new RecordItemIndex(3));
            Validate.Exists(repo.AppSmiles.FormHome.OLAInfo);
            Delay.Milliseconds(100);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.AppSmiles.Self, false, new RecordItemIndex(4));
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
