///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
// 
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Drawing;
using System.Globalization;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading;
using WinForms = System.Windows.Forms;
using POCSmiles.Base_Dados;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Repository;
using Ranorex.Core.Testing;

namespace POCSmiles.Resultado_Esperado
{
    public partial class RP_AlterarAssentos
    {
        /// <summary>
        /// This method gets called right after the recording has been started.
        /// It can be used to execute recording specific initialization code.
        /// </summary>
        private void Init()
        {
            // Your recording specific initialization code goes here.
        }

        public void SaveDataDB(string identifiacacaoVoo, string numSMiles, string url)
        {
        	try {
        		if (identifiacacaoVoo.Equals("")) {
        			identifiacacaoVoo = POCSmiles.Resultado_Esperado.SalvarDadosExcel.codigoConfimacao;
        		}
        		Base_Dados.UtilsDB.updateChairSelected(identifiacacaoVoo,numSMiles,url,POCSmiles.Reserva_De_Voo.SelecionarVooAssento.taxasMilhas, POCSmiles.Reserva_De_Voo.SelecionarVooAssento.taxasDinheiro);
        	}catch (Exception e) {
        		Report.Failure("Database query execution  exception- Error updating user in data base: " + e.Message);	
        	}
        }
        
        private void validarReembolso(string numSmiles, string identificacaoVoo, string tipoPagamentoAssento){
        	try {
        		Report.Info("Validating data on screen");
//        		double taxasDinheiroReee = double.Parse(repo.SmilesOMelhorProgramaDeMilhasS1.SelecionarAssento_TaxasDinheiroReembolsar.Element.GetAttributeValueText("InnerText").Replace("R$","").Trim());
//        		double taxasMilhasRee = double.Parse(repo.SmilesOMelhorProgramaDeMilhasS1.SelecionarAssento_TaxasMilhasReembolsar.Element.GetAttributeValueText("InnerText"));
        		double taxasDinheiroDB = double.Parse(UtilsDB.getDataValuePNR(numSmiles,identificacaoVoo,"ASSENTO_TAXAS_DINHEIRO"));
        		double taxasMilhasDB = double.Parse(UtilsDB.getDataValuePNR(numSmiles,identificacaoVoo,"ASSENTO_TAXAS_MILHAS"));
        		double valorAtual = double.Parse(repo.SmilesOMelhorProgramaDeMilhasS1.SelecionarAssento_ValorPagamento.Element.GetAttributeValueText("InnerText").Replace("milhas", "").Replace("R$", "").Trim());
        		if (tipoPagamentoAssento.Equals("Smiles")) {
        			if (valorAtual >= taxasMilhasDB) {
        				if(!Utils.CheckExist(repo.SmilesOMelhorProgramaDeMilhasS1.SelecionarAssento_TaxasMilhasInfo.AbsolutePath.ToResolvedString(),"InnerText",(valorAtual - taxasMilhasDB).ToString("N",new CultureInfo("is-IS")).Replace(",00","").Replace(".", ""),1000)){
        					Report.Failure("Error trying to find '" + (valorAtual - taxasMilhasDB) + "'");
	        			}
        				if(!Utils.CheckExist(repo.SmilesOMelhorProgramaDeMilhasS1.SelecionarAssento_TaxasMilhasReembolsarInfo.AbsolutePath.ToResolvedString(),"InnerText","0", 1000)){
        					Report.Failure("Error trying to find '" + (valorAtual - taxasMilhasDB) + "'");
	        			}
        			}
        			else if(valorAtual < taxasMilhasDB) {
        				if(!Utils.CheckExist(repo.SmilesOMelhorProgramaDeMilhasS1.SelecionarAssento_TaxasMilhasReembolsarInfo.AbsolutePath.ToResolvedString(),"InnerText",(taxasMilhasDB - valorAtual).ToString("N",new CultureInfo("is-IS")).Replace(",00","").Replace(".", ""),1000)){
	        				Report.Failure("Error trying to find '" + (taxasMilhasDB - valorAtual) + "'");
	        			}
        				if(!Utils.CheckExist(repo.SmilesOMelhorProgramaDeMilhasS1.SelecionarAssento_TaxasMilhasInfo.AbsolutePath.ToResolvedString(),"InnerText","0",1000)){
	        				Report.Failure("Error trying to find '" + (taxasMilhasDB - valorAtual) + "'");
	        			}
        			}
        			
        			valorAtual = 0;
        			
        			if (valorAtual >= taxasDinheiroDB) {
        				if(!Utils.CheckExist(repo.SmilesOMelhorProgramaDeMilhasS1.SelecionarAssento_TaxasDinheiroInfo.AbsolutePath.ToResolvedString(),"InnerText",string.Format("{0:C}",(valorAtual - taxasDinheiroDB).ToString()),1000)){
        					Report.Failure("Error trying to find '" + (valorAtual - taxasDinheiroDB) + "'");
	        			}
        				if(!Utils.CheckExist(repo.SmilesOMelhorProgramaDeMilhasS1.SelecionarAssento_TaxasDinheiroReembolsarInfo.AbsolutePath.ToResolvedString(),"InnerText","0,00",1000)){
        					Report.Failure("Error trying to find '" + (valorAtual - taxasMilhasDB) + "'");
	        			}
        			}
        			else if(valorAtual < taxasDinheiroDB) {
        				if(!Utils.CheckExist(repo.SmilesOMelhorProgramaDeMilhasS1.SelecionarAssento_TaxasDinheiroReembolsarInfo.AbsolutePath.ToResolvedString(),"InnerText",string.Format("{0:C}",(taxasDinheiroDB - valorAtual).ToString()),1000)){
	        				Report.Failure("Error trying to find '" + (taxasDinheiroDB - valorAtual) + "'");
	        			}
        				if(!Utils.CheckExist(repo.SmilesOMelhorProgramaDeMilhasS1.SelecionarAssento_TaxasDinheiroInfo.AbsolutePath.ToResolvedString(),"InnerText","0,00",1000)){
	        				Report.Failure("Error trying to find '" + (taxasDinheiroDB - valorAtual) + "'");
	        			}
        			}
        		}
        		else {
        			if (valorAtual >= taxasDinheiroDB) {
        				if(!Utils.CheckExist(repo.SmilesOMelhorProgramaDeMilhasS1.SelecionarAssento_TaxasDinheiroInfo.AbsolutePath.ToResolvedString(),"InnerText",string.Format("{0:C}",(valorAtual - taxasDinheiroDB).ToString()),1000)){
        					Report.Failure("Error trying to find '" + (valorAtual - taxasDinheiroDB) + "'");
	        			}
        				if(!Utils.CheckExist(repo.SmilesOMelhorProgramaDeMilhasS1.SelecionarAssento_TaxasDinheiroReembolsarInfo.AbsolutePath.ToResolvedString(),"InnerText","0,00",1000)){
        					Report.Failure("Error trying to find '" + (valorAtual - taxasMilhasDB) + "'");
	        			}
        			}
        			else if(valorAtual < taxasDinheiroDB) {
        				if(!Utils.CheckExist(repo.SmilesOMelhorProgramaDeMilhasS1.SelecionarAssento_TaxasDinheiroReembolsarInfo.AbsolutePath.ToResolvedString(),"InnerText",string.Format("{0:C}",(taxasDinheiroDB - valorAtual).ToString()),1000)){
	        				Report.Failure("Error trying to find '" + (taxasDinheiroDB - valorAtual) + "'");
	        			}
        				if(!Utils.CheckExist(repo.SmilesOMelhorProgramaDeMilhasS1.SelecionarAssento_TaxasDinheiroInfo.AbsolutePath.ToResolvedString(),"InnerText","0,00",1000)){
	        				Report.Failure("Error trying to find '" + (taxasDinheiroDB - valorAtual) + "'");
	        			}
        			}
        			
        			valorAtual = 0;
        			
        			if (valorAtual >= taxasMilhasDB) {
        				if(!Utils.CheckExist(repo.SmilesOMelhorProgramaDeMilhasS1.SelecionarAssento_TaxasMilhasInfo.AbsolutePath.ToResolvedString(),"InnerText",(valorAtual - taxasMilhasDB).ToString("N",new CultureInfo("is-IS")).Replace(",00","").Replace(".", ""),1000)){
        					Report.Failure("Error trying to find '" + (valorAtual - taxasMilhasDB) + "'");
	        			}
        				if(!Utils.CheckExist(repo.SmilesOMelhorProgramaDeMilhasS1.SelecionarAssento_TaxasMilhasReembolsarInfo.AbsolutePath.ToResolvedString(),"InnerText","0",1000)){
        					Report.Failure("Error trying to find '" + (valorAtual - taxasMilhasDB) + "'");
	        			}
        			}
        			else if(valorAtual < taxasMilhasDB) {
        				if(!Utils.CheckExist(repo.SmilesOMelhorProgramaDeMilhasS1.SelecionarAssento_TaxasMilhasReembolsarInfo.AbsolutePath.ToResolvedString(),"InnerText",(taxasMilhasDB - valorAtual).ToString("N",new CultureInfo("is-IS")).Replace(",00","").Replace(".", ""),1000)){
	        				Report.Failure("Error trying to find '" + (taxasMilhasDB - valorAtual) + "'");
	        			}
        				if(!Utils.CheckExist(repo.SmilesOMelhorProgramaDeMilhasS1.SelecionarAssento_TaxasMilhasInfo.AbsolutePath.ToResolvedString(),"InnerText","0",1000)){
	        				Report.Failure("Error trying to find '" + (taxasMilhasDB - valorAtual) + "'");
	        			}
        			}
        			
        		}
        						
        		Report.Info("Data on screen validated");
        	} catch (Exception e) {
        		Report.Failure("Exception launched validating data on screen. Erro: " + e.Message);
        	}
        }

    }
}