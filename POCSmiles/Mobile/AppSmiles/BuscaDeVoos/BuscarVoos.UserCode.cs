///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
// 
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Drawing;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Repository;
using Ranorex.Core.Testing;

namespace POCSmiles.Mobile.AppSmiles.BuscaDeVoos
{
    public partial class BuscarVoos
    {
        /// <summary>
        /// This method gets called right after the recording has been started.
        /// It can be used to execute recording specific initialization code.
        /// </summary>
        private void Init()
        {
            // Your recording specific initialization code goes here.
        }

        public void SelecionarDestinos(string tipoTrajeto,string valorBuscaDe1,string valorBuscaPara1,string valorBuscaDe2,string valorBuscaPara2)
        {
        	try {
        		if (tipoTrajeto.ToUpper().Equals("SÓ IDA") || tipoTrajeto.ToUpper().Equals("IDA E VOLTA")) {
        			if (!valorBuscaDe1.Equals("")) {
        				repo.AppSmiles.SearchFly.De1.Touch();
	    				repo.AppSmiles.SearchAirportsActivity.TextoBusca.Element.SetAttributeValue("Text", valorBuscaDe1);
	    				repo.AppSmiles.SearchAirportsActivity.ResultadoBuscaDe1.Touch();
        			}
        			if (!valorBuscaPara1.Equals("")) {
	    				repo.AppSmiles.SearchFly.Para1.Touch();
	    				repo.AppSmiles.SearchAirportsActivity.TextoBusca.Element.SetAttributeValue("Text", valorBuscaPara1);
	    				repo.AppSmiles.SearchAirportsActivity.ResultadoBuscaPara1.Touch();
        			}
        		}
        		if (tipoTrajeto.ToUpper().Equals("+ TRECHOS")) {
        			if (!valorBuscaDe1.Equals("")) {
        				repo.AppSmiles.SearchFly.De1.Touch();
	    				repo.AppSmiles.SearchAirportsActivity.TextoBusca.Element.SetAttributeValue("Text", valorBuscaDe1);
	    				repo.AppSmiles.SearchAirportsActivity.ResultadoBuscaDe1.Touch();
        			}
        			if (!valorBuscaPara1.Equals("")) {
	    				repo.AppSmiles.SearchFly.Para1.Touch();
	    				repo.AppSmiles.SearchAirportsActivity.TextoBusca.Element.SetAttributeValue("Text", valorBuscaPara1);
	    				repo.AppSmiles.SearchAirportsActivity.ResultadoBuscaPara1.Touch();
        			}
        			if (!valorBuscaDe2.Equals("")) {
        				repo.AppSmiles.SearchFly.De1.Touch();
	    				repo.AppSmiles.SearchAirportsActivity.TextoBusca.Element.SetAttributeValue("Text", valorBuscaDe2);
	    				repo.AppSmiles.SearchAirportsActivity.ResultadoBuscaDe2.Touch();
        			}
        			if (!valorBuscaPara2.Equals("")) {
	    				repo.AppSmiles.SearchFly.Para1.Touch();
	    				repo.AppSmiles.SearchAirportsActivity.TextoBusca.Element.SetAttributeValue("Text", valorBuscaPara2);
	    				repo.AppSmiles.SearchAirportsActivity.ResultadoBuscaPara2.Touch();
        			}
        		}
	        } catch (Exception e) {
        		Report.Failure("Erro ao buscar voo. Erro: " + e.Message);
	        }
        }

        public void SelecionarDatas(string tipoTrajeto, string data1, string data2, string data3)
        {
        	try {
        		System.DateTime newDate;
        		if (tipoTrajeto.ToUpper().Equals("SÓ IDA")) {
        			if (!data1.Equals("")) {
        				if (data1.Contains("d+")) 
		        		{
		        			newDate = System.DateTime.Today.AddDays(int.Parse(data1.Replace("d+","")));
		        		}else
		        		{
		        			newDate = System.DateTime.Parse(data1);
		        		}
        				repo.AppSmiles.SearchFly.Calendario1.Touch();
        				Smiles_UserCode.SetCalendarDateMobile(newDate.ToString(),repo).DoubleClick();
        				repo.AppSmiles.DateChoice.BotaoConfirmar.Touch();
        			}
        		}
        		if (tipoTrajeto.ToUpper().Equals("IDA E VOLTA")) {
        			if (!data1.Equals("")) {
        				if (data1.Contains("d+")) 
		        		{
		        			newDate = System.DateTime.Today.AddDays(int.Parse(data1.Replace("d+","")));
		        		}else
		        		{
		        			newDate = System.DateTime.Parse(data1);
		        		}
        				repo.AppSmiles.SearchFly.Calendario1.Touch();
        				Smiles_UserCode.SetCalendarDateMobile(newDate.ToString(),repo).DoubleClick();
        				repo.AppSmiles.DateChoice.BotaoConfirmar.Touch();
        			}
        			if (!data2.Equals("")) {
        				if (data2.Contains("d+")) 
		        		{
		        			newDate = System.DateTime.Today.AddDays(int.Parse(data2.Replace("d+","")));
		        		}else
		        		{
		        			newDate = System.DateTime.Parse(data2);
		        		}
        				repo.AppSmiles.SearchFly.Calendario2.Touch();
        				Smiles_UserCode.SetCalendarDateMobile(newDate.ToString(),repo).Touch();
        				repo.AppSmiles.DateChoice.BotaoConfirmar.Touch();
        			}
        		}
        		if (tipoTrajeto.ToUpper().Equals("+ TRECHOS")) {
        			if (!data1.Equals("")) {
        				if (data1.Contains("d+")) 
		        		{
		        			newDate = System.DateTime.Today.AddDays(int.Parse(data1.Replace("d+","")));
		        		}else
		        		{
		        			newDate = System.DateTime.Parse(data1);
		        		}
        				repo.AppSmiles.SearchFly.Calendario1.Touch();
        				Smiles_UserCode.SetCalendarDateMobile(newDate.ToString(),repo).DoubleClick();
        				repo.AppSmiles.DateChoice.BotaoConfirmar.Touch();
        			}
        			if (!data3.Equals("")) {
        				if (data3.Contains("d+")) 
		        		{
		        			newDate = System.DateTime.Today.AddDays(int.Parse(data3.Replace("d+","")));
		        		}else
		        		{
		        			newDate = System.DateTime.Parse(data3);
		        		}
        				repo.AppSmiles.SearchFly.Calendario2.Touch();
        				Smiles_UserCode.SetCalendarDateMobile(newDate.ToString(),repo).DoubleClick();
        				repo.AppSmiles.DateChoice.BotaoConfirmar.Touch();
        			}
        		}
        	} catch (Exception e) {
        		Report.Failure("Erro ao buscar voo. Erro: " + e.Message);
        	}
        }

        public void SelecionarPassageiros(string qntAdultos, string qntCriancas, string qntBebes)
        {
        	try {
        		if (!qntAdultos.Equals("")) {
        			for (int i = 0; i < int.Parse(qntAdultos); i++) {
        				repo.AppSmiles.SearchFly.BotaoAdicionarAdulto.Touch();
        			}
        		}
        		if (!qntCriancas.Equals("")) {
        			for (int i = 0; i < int.Parse(qntCriancas); i++) {
        				repo.AppSmiles.SearchFly.BotaoAdicionarCrianca.Touch();
        			}
        		}
        		if (!qntBebes.Equals("")) {
        			for (int i = 0; i < int.Parse(qntBebes); i++) {
        				repo.AppSmiles.SearchFly.BotaoAdicionarBebes.Touch();
        			}
        		}
        	} catch (Exception e) {
        		Report.Failure("Erro ao buscar voo. Erro: " + e.Message);
        	}
        }

    }
}