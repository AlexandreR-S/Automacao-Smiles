///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace POCSmiles.Mobile.RxBrowser.Init
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The InitRxBrowser recording.
    /// </summary>
    [TestModule("5a4f7138-5048-4f68-b6fb-9513b478b08c", ModuleType.Recording, 1)]
    public partial class InitRxBrowser : ITestModule
    {
        /// <summary>
        /// Holds an instance of the POCSmiles.SmilesRepository repository.
        /// </summary>
        public static POCSmiles.SmilesRepository repo = POCSmiles.SmilesRepository.Instance;

        static InitRxBrowser instance = new InitRxBrowser();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public InitRxBrowser()
        {
            Dispositivo = "";
            URL = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static InitRxBrowser Instance
        {
            get { return instance; }
        }

#region Variables

        /// <summary>
        /// Gets or sets the value of variable Dispositivo.
        /// </summary>
        [TestVariable("2d16d4fc-59f8-43ed-9ca7-e71ca4e01966")]
        public string Dispositivo
        {
            get { return repo.Dispositivo; }
            set { repo.Dispositivo = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable URL.
        /// </summary>
        [TestVariable("3f3858d8-ef53-444a-9e5d-840718941e70")]
        public string URL
        {
            get { return repo.URL; }
            set { repo.URL = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Application", "Run mobile app 'ranorex.RxBrowser' on device from variable $Dispositivo.", new RecordItemIndex(0));
            Host.Local.RunMobileApp(Dispositivo, "ranorex.RxBrowser", true);
            Delay.Milliseconds(3500);
            
            // Browse to site.
            Report.Log(ReportLevel.Info, "Set Value", "Browse to site.\r\nSetting attribute PageUrl to '$URL' on item 'RxBrowser.Dom'.", repo.RxBrowser.Dom.SelfInfo, new RecordItemIndex(1));
            repo.RxBrowser.Dom.Self.Element.SetAttributeValue("PageUrl", URL);
            Delay.Milliseconds(1000);
            
            WaitForDocumentLoad();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(3));
            Delay.Duration(2000, false);
            
            //Report.Log(ReportLevel.Info, "Invoke Action", "Invoking WaitForDocumentLoaded() on item 'RxBrowser.Dom'.", repo.RxBrowser.Dom.SelfInfo, new RecordItemIndex(4));
            //repo.RxBrowser.Dom.Self.WaitForDocumentLoaded();
            //Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'RxBrowser.Dom.Home_MenuPrincipal'.", repo.RxBrowser.Dom.Home_MenuPrincipalInfo, new RecordItemIndex(5));
            Validate.Exists(repo.RxBrowser.Dom.Home_MenuPrincipalInfo);
            Delay.Milliseconds(0);
            
            Logout();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'RxBrowser.Dom.Home_Entrar'.", repo.RxBrowser.Dom.Home_EntrarInfo, new RecordItemIndex(7));
            Validate.Exists(repo.RxBrowser.Dom.Home_EntrarInfo);
            Delay.Milliseconds(100);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.RxBrowser.Self, false, new RecordItemIndex(8));
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
