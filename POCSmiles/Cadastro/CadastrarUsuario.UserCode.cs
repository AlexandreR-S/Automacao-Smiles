///////////////////////////////////////////////////////////////////////////////
//
// FormProgesso file was automatically generated by RANOREX.
// Your custom recording code should go in FormProgesso file.
// The designer will only add methods to FormProgesso file, so your custom code won't be overwritten.
// http://www.ranorex.com
// 
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Drawing;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Repository;
using Ranorex.Core.Testing;

namespace POCSmiles.Cadastro
{
    public partial class CadastrarUsuario
    {
        /// <summary>
        /// FormProgesso method gets called right after the recording has been started.
        /// It can be used to execute recording specific initialization code.
        /// </summary>
        private void Init()
        {
            // Your recording specific initialization code goes here.
        }
        
        public static string randomCPF = "";
        public static string randomEmail = "";

        private void SelectItemListBox(string selectTagElement, string itemName){
        	try 
        	{
        		if(itemName.Equals("")){
        			return;
        		}
        		Report.Log(ReportLevel.Info,"Selecting item '" + itemName + "'");
        		Utils.SelectItemListBox(repo.SmilesOMelhorProgramaDeMilhasS1.AbsoluteBasePath.ToResolvedString() + selectTagElement, itemName);
        		Report.Log(ReportLevel.Info,"Item '" + itemName + "' selected");
        	} catch (Exception) 
        	{
        		Report.Error("CadastrarUsuario - Error launched trying to select item '" + itemName + "' on element '" + selectTagElement + "'");
        		throw new System.Exception("CadastrarUsuario.SeletItemListBox");
        	}
        }
        
         private void SeleclGenrerFlag(string sexo){
        	try {
        		if (sexo.Equals("")) {
        			return;
        		}
        		Report.Info("Selecting");
        		Utils.ClickElementAsHuman(repo.SmilesOMelhorProgramaDeMilhasS1.Cadastro_SexoInfo.AbsolutePath.ToResolvedString(),"InnerText",sexo,"1");
        		Report.Info(sexo + " selected");
        	} catch (Exception) {
        		Report.Error("CadastrarUsuario - Error selecting genre");
        		throw new System.Exception("CadastrarUsuario.SeleclGenrerFlag");
        	}
        }
        
        public void setCPF(){
        	randomCPF = Utils.GerarCpf();
        }
        
        public string setRandomEmail(){
        	if (randomCPF.Equals("")) {
        		randomCPF = Utils.GerarCpf();	
        	}
        	return ("test" + randomCPF + "@email.com");
        }

        private void setCpf(string cpf){
        	try {
        		Report.Log(ReportLevel.Info,"Inserting '" + cpf + "'");
        		if (cpf.Trim().Equals("ALEATORIO")) {
        			cpf = Utils.GerarCpf();
        			repo.SmilesOMelhorProgramaDeMilhasS1.Cadastro_CPF.PressKeys(cpf,Duration.FromMilliseconds(1));
        		}else{
        			repo.SmilesOMelhorProgramaDeMilhasS1.Cadastro_CPF.PressKeys(cpf,Duration.FromMilliseconds(1));
        		}
        		randomCPF = cpf;
        		_CPF = cpf;
        		Report.Info(cpf + " inserted");
        	} catch (Exception e) {
        		Report.Error("CadastrarUsuario - Error waiting browser loading");
        		throw new System.Exception("CadastrarUsuario.setCpf");
        	}
        }
        
        private void setEmail(string email){
        	try {
        		Report.Log(ReportLevel.Info,"Inserting '" + email + "'");
        		if (email.Trim().Equals("ALEATORIO")) {
        			email = setRandomEmail();
        			repo.SmilesOMelhorProgramaDeMilhasS1.Cadastro_Email.PressKeys(email,Duration.FromMilliseconds(1));
        			randomEmail = email;
        		}
        		else if (email.Trim().Equals("CONFIRMAR")) {
        			repo.SmilesOMelhorProgramaDeMilhasS1.Cadastro_ConfirmarEmail.PressKeys(setRandomEmail(),Duration.FromMilliseconds(1));
        		}
        		else{
        			repo.SmilesOMelhorProgramaDeMilhasS1.Cadastro_Email.PressKeys(email,Duration.FromMilliseconds(1));
        			randomEmail = email;
        		}
        		Report.Info(email + " inserted");
        	} catch (Exception e) {
        		Report.Error("CadastrarUsuario - Error waiting browser loading");
        		throw new System.Exception("CadastrarUsuario.setEmail");
        	}
        }

        public void SelectCheckBox(string checkBoxPath, bool check)
        {
        }

        public void TypeKeys(string element, string text)
        {
        	try 
        	{
        		if (text.Equals("")) {
        			return;
        		}
        		Report.Log(ReportLevel.Info,"Inserting text '" + text + "'");
        		InputTag input = repo.SmilesOMelhorProgramaDeMilhasS1.AbsoluteBasePath.ToResolvedString() + element;
        		input.PressKeys("{END}{SHIFT DOWN}{HOME}{SHIFT UP}{DELETE}" + text,Duration.FromMilliseconds(1));
        		Report.Log(ReportLevel.Info,"Text inserted '" + text + "'");
        	} catch (Exception) 
        	{
        		Report.Error("AlterarDados - Error launched trying to inserting text '" + text + "' on element '" + element + "'");
        		throw new System.Exception("AlterarDados.TypeKeys");
        	}
        }
    }
}