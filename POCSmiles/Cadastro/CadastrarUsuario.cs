///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace POCSmiles.Cadastro
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The CadastrarUsuario recording.
    /// </summary>
    [TestModule("15d2c128-57c8-430a-a9ac-d1494b1ac2eb", ModuleType.Recording, 1)]
    public partial class CadastrarUsuario : ITestModule
    {
        /// <summary>
        /// Holds an instance of the POCSmiles.SmilesRepository repository.
        /// </summary>
        public static POCSmiles.SmilesRepository repo = POCSmiles.SmilesRepository.Instance;

        static CadastrarUsuario instance = new CadastrarUsuario();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public CadastrarUsuario()
        {
            Email = "";
            TipoDocumento = "Português";
            Nacionalidade = " Brasileiro ";
            Nome = "ROBO";
            Sobrenome = "TESTE";
            Sexo = "Masculino";
            DataNascimento = "05121991";
            ConfirmarEmail = "CONFIRMAR";
            DDRes = "11";
            NumRes = "44797418";
            DDCel = "11";
            NumCel = "992500630";
            EnderecoPais = " Brasil ";
            EnderecoCEP = "09290190";
            EnderecoRua = "Rua Sarambe";
            EnderecoNum = "617";
            EnderecoUF = " SP ";
            EnderecoCIdade = "Santo Andre";
            Senha = "1010";
            Idioma = "Português";
            CPF = "";
            Documento = "480286565";
            DDIRes = "11";
            DDICel = "11";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static CadastrarUsuario Instance
        {
            get { return instance; }
        }

#region Variables

        string _Email;

        /// <summary>
        /// Gets or sets the value of variable Email.
        /// </summary>
        [TestVariable("5ee9d1db-0888-4cfc-a778-97bf639fa408")]
        public string Email
        {
            get { return _Email; }
            set { _Email = value; }
        }

        string _Nacionalidade;

        /// <summary>
        /// Gets or sets the value of variable Nacionalidade.
        /// </summary>
        [TestVariable("d8ff45d9-da05-4c59-8251-15a55aa9b278")]
        public string Nacionalidade
        {
            get { return _Nacionalidade; }
            set { _Nacionalidade = value; }
        }

        string _Nome;

        /// <summary>
        /// Gets or sets the value of variable Nome.
        /// </summary>
        [TestVariable("6369466d-755d-453b-9f89-375619fbdca2")]
        public string Nome
        {
            get { return _Nome; }
            set { _Nome = value; }
        }

        string _Sobrenome;

        /// <summary>
        /// Gets or sets the value of variable Sobrenome.
        /// </summary>
        [TestVariable("7dd5e3da-3e33-40e1-818e-17cf2c3dd282")]
        public string Sobrenome
        {
            get { return _Sobrenome; }
            set { _Sobrenome = value; }
        }

        string _Sexo;

        /// <summary>
        /// Gets or sets the value of variable Sexo.
        /// </summary>
        [TestVariable("045bd466-5183-4e35-a63d-cb5b0e4cfb0a")]
        public string Sexo
        {
            get { return _Sexo; }
            set { _Sexo = value; }
        }

        string _DataNascimento;

        /// <summary>
        /// Gets or sets the value of variable DataNascimento.
        /// </summary>
        [TestVariable("678c8a8f-f565-4562-be0a-f0de5773c25a")]
        public string DataNascimento
        {
            get { return _DataNascimento; }
            set { _DataNascimento = value; }
        }

        string _ConfirmarEmail;

        /// <summary>
        /// Gets or sets the value of variable ConfirmarEmail.
        /// </summary>
        [TestVariable("efa6c8c2-c2fb-402f-84ce-64e82960949f")]
        public string ConfirmarEmail
        {
            get { return _ConfirmarEmail; }
            set { _ConfirmarEmail = value; }
        }

        string _DDRes;

        /// <summary>
        /// Gets or sets the value of variable DDRes.
        /// </summary>
        [TestVariable("ada30d18-e950-492c-82f1-52c92638f4fb")]
        public string DDRes
        {
            get { return _DDRes; }
            set { _DDRes = value; }
        }

        string _NumRes;

        /// <summary>
        /// Gets or sets the value of variable NumRes.
        /// </summary>
        [TestVariable("5f27a44e-770e-4d2a-b3cd-ee5aaa184961")]
        public string NumRes
        {
            get { return _NumRes; }
            set { _NumRes = value; }
        }

        string _DDCel;

        /// <summary>
        /// Gets or sets the value of variable DDCel.
        /// </summary>
        [TestVariable("d9d66550-ce2a-457f-8b70-e678f6836c86")]
        public string DDCel
        {
            get { return _DDCel; }
            set { _DDCel = value; }
        }

        string _NumCel;

        /// <summary>
        /// Gets or sets the value of variable NumCel.
        /// </summary>
        [TestVariable("46500959-5a4d-4a83-9026-08ce15b03e00")]
        public string NumCel
        {
            get { return _NumCel; }
            set { _NumCel = value; }
        }

        string _EnderecoPais;

        /// <summary>
        /// Gets or sets the value of variable EnderecoPais.
        /// </summary>
        [TestVariable("a3af8319-a79b-4cce-a4f2-cca40d8bf9ee")]
        public string EnderecoPais
        {
            get { return _EnderecoPais; }
            set { _EnderecoPais = value; }
        }

        string _EnderecoCEP;

        /// <summary>
        /// Gets or sets the value of variable EnderecoCEP.
        /// </summary>
        [TestVariable("15018854-1539-42f3-bbae-7dd42ef672d6")]
        public string EnderecoCEP
        {
            get { return _EnderecoCEP; }
            set { _EnderecoCEP = value; }
        }

        string _EnderecoRua;

        /// <summary>
        /// Gets or sets the value of variable EnderecoRua.
        /// </summary>
        [TestVariable("5956197d-42ca-420a-b687-f01d0944ae2e")]
        public string EnderecoRua
        {
            get { return _EnderecoRua; }
            set { _EnderecoRua = value; }
        }

        string _EnderecoNum;

        /// <summary>
        /// Gets or sets the value of variable EnderecoNum.
        /// </summary>
        [TestVariable("ec9b3907-f360-4489-9631-86382b5a4081")]
        public string EnderecoNum
        {
            get { return _EnderecoNum; }
            set { _EnderecoNum = value; }
        }

        string _EnderecoUF;

        /// <summary>
        /// Gets or sets the value of variable EnderecoUF.
        /// </summary>
        [TestVariable("87cf70ff-f11c-420d-a41e-1ac16d1052a3")]
        public string EnderecoUF
        {
            get { return _EnderecoUF; }
            set { _EnderecoUF = value; }
        }

        string _EnderecoCIdade;

        /// <summary>
        /// Gets or sets the value of variable EnderecoCIdade.
        /// </summary>
        [TestVariable("5463be5b-e16c-4b36-8a44-84df12fbfb69")]
        public string EnderecoCIdade
        {
            get { return _EnderecoCIdade; }
            set { _EnderecoCIdade = value; }
        }

        string _Senha;

        /// <summary>
        /// Gets or sets the value of variable Senha.
        /// </summary>
        [TestVariable("fa8c6722-f146-4db4-842a-825bccee13a6")]
        public string Senha
        {
            get { return _Senha; }
            set { _Senha = value; }
        }

        string _Idioma;

        /// <summary>
        /// Gets or sets the value of variable Idioma.
        /// </summary>
        [TestVariable("13dfe6bd-7615-41ac-9aab-6b2c0a5e9d2a")]
        public string Idioma
        {
            get { return _Idioma; }
            set { _Idioma = value; }
        }

        string _CPF;

        /// <summary>
        /// Gets or sets the value of variable CPF.
        /// </summary>
        [TestVariable("09f35fe3-ad3a-4428-98ac-9dd3a9a8a398")]
        public string CPF
        {
            get { return _CPF; }
            set { _CPF = value; }
        }

        string _Documento;

        /// <summary>
        /// Gets or sets the value of variable Documento.
        /// </summary>
        [TestVariable("eefa0be4-2f09-44d8-bfd3-e8c8f33c5c8d")]
        public string Documento
        {
            get { return _Documento; }
            set { _Documento = value; }
        }

        string _DDIRes;

        /// <summary>
        /// Gets or sets the value of variable DDIRes.
        /// </summary>
        [TestVariable("628c9a0a-f1af-4cd9-b780-4992ea3fe110")]
        public string DDIRes
        {
            get { return _DDIRes; }
            set { _DDIRes = value; }
        }

        string _DDICel;

        /// <summary>
        /// Gets or sets the value of variable DDICel.
        /// </summary>
        [TestVariable("d4cabf33-6071-419d-882d-78d7fa878ff2")]
        public string DDICel
        {
            get { return _DDICel; }
            set { _DDICel = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable TipoDocumento.
        /// </summary>
        [TestVariable("1cc8d101-67de-4805-b230-8f7da7488fd7")]
        public string TipoDocumento
        {
            get { return repo.TipoDocumento; }
            set { repo.TipoDocumento = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SmilesOMelhorProgramaDeMilhasS1.CadastreSe' at LowerCenter.", repo.SmilesOMelhorProgramaDeMilhasS1.CadastreSeInfo, new RecordItemIndex(0));
            repo.SmilesOMelhorProgramaDeMilhasS1.CadastreSe.Click(Location.LowerCenter, 1);
            Delay.Milliseconds(490);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'SmilesOMelhorProgramaDeMilhasS1.Cadastro_Nome'.", repo.SmilesOMelhorProgramaDeMilhasS1.Cadastro_NomeInfo, new RecordItemIndex(1));
            Validate.Exists(repo.SmilesOMelhorProgramaDeMilhasS1.Cadastro_NomeInfo);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Nome' with focus on 'SmilesOMelhorProgramaDeMilhasS1.Cadastro_Nome'.", repo.SmilesOMelhorProgramaDeMilhasS1.Cadastro_NomeInfo, new RecordItemIndex(2));
            repo.SmilesOMelhorProgramaDeMilhasS1.Cadastro_Nome.PressKeys(Nome, 1);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Sobrenome' with focus on 'SmilesOMelhorProgramaDeMilhasS1.Cadastro_Sobrenome'.", repo.SmilesOMelhorProgramaDeMilhasS1.Cadastro_SobrenomeInfo, new RecordItemIndex(3));
            repo.SmilesOMelhorProgramaDeMilhasS1.Cadastro_Sobrenome.PressKeys(Sobrenome, 1);
            Delay.Milliseconds(0);
            
            SelectItemListBox("//select[@id<'_selectNacionality']", Nacionalidade);
            Delay.Milliseconds(0);
            
            SelectItemListBox("//select[@id<'_selectLanguage']", Idioma);
            Delay.Milliseconds(0);
            
            SeleclGenrerFlag(Sexo);
            Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Delay", "Waiting for 500ms.", new RecordItemIndex(7));
            //Delay.Duration(500, false);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$DataNascimento' with focus on 'SmilesOMelhorProgramaDeMilhasS1.Cadastro_DiaNascimento'.", repo.SmilesOMelhorProgramaDeMilhasS1.Cadastro_DiaNascimentoInfo, new RecordItemIndex(8));
            repo.SmilesOMelhorProgramaDeMilhasS1.Cadastro_DiaNascimento.PressKeys(DataNascimento, 50);
            Delay.Milliseconds(0);
            
            SelectItemListBox("//select[@id<'_documentType']", TipoDocumento);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Documento' with focus on 'SmilesOMelhorProgramaDeMilhasS1.Cadastro_DocumentoIdentidade'.", repo.SmilesOMelhorProgramaDeMilhasS1.Cadastro_DocumentoIdentidadeInfo, new RecordItemIndex(10));
            repo.SmilesOMelhorProgramaDeMilhasS1.Cadastro_DocumentoIdentidade.PressKeys(Documento, 1);
            Delay.Milliseconds(0);
            
            setCpf(CPF);
            Delay.Milliseconds(0);
            
            TypeKeys("//input[@id<'_homePhoneDDI']", DDIRes);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$DDRes' with focus on 'SmilesOMelhorProgramaDeMilhasS1.Cadastro_DDDResidencial'.", repo.SmilesOMelhorProgramaDeMilhasS1.Cadastro_DDDResidencialInfo, new RecordItemIndex(13));
            repo.SmilesOMelhorProgramaDeMilhasS1.Cadastro_DDDResidencial.PressKeys(DDRes, 1);
            Delay.Milliseconds(90);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$NumRes' with focus on 'SmilesOMelhorProgramaDeMilhasS1.Cadastro_TelefoneResidencial'.", repo.SmilesOMelhorProgramaDeMilhasS1.Cadastro_TelefoneResidencialInfo, new RecordItemIndex(14));
            repo.SmilesOMelhorProgramaDeMilhasS1.Cadastro_TelefoneResidencial.PressKeys(NumRes, 1);
            Delay.Milliseconds(90);
            
            TypeKeys("//input[@id<'_cellPhoneDDI']", DDICel);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$DDCel' with focus on 'SmilesOMelhorProgramaDeMilhasS1.Cadastro_DDDCelular'.", repo.SmilesOMelhorProgramaDeMilhasS1.Cadastro_DDDCelularInfo, new RecordItemIndex(16));
            repo.SmilesOMelhorProgramaDeMilhasS1.Cadastro_DDDCelular.PressKeys(DDCel, 1);
            Delay.Milliseconds(90);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$NumCel' with focus on 'SmilesOMelhorProgramaDeMilhasS1.Cadastro_NumeroCelular'.", repo.SmilesOMelhorProgramaDeMilhasS1.Cadastro_NumeroCelularInfo, new RecordItemIndex(17));
            repo.SmilesOMelhorProgramaDeMilhasS1.Cadastro_NumeroCelular.PressKeys(NumCel, 1);
            Delay.Milliseconds(90);
            
            setEmail(Email);
            Delay.Milliseconds(0);
            
            setEmail(ConfirmarEmail);
            Delay.Milliseconds(0);
            
            SelectItemListBox("//select[@id<'_selectCountry']", EnderecoPais);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$EnderecoCEP' with focus on 'SmilesOMelhorProgramaDeMilhasS1.Cadastro_CEP'.", repo.SmilesOMelhorProgramaDeMilhasS1.Cadastro_CEPInfo, new RecordItemIndex(21));
            repo.SmilesOMelhorProgramaDeMilhasS1.Cadastro_CEP.PressKeys(EnderecoCEP, 1);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$EnderecoRua' with focus on 'SmilesOMelhorProgramaDeMilhasS1.Cadastro_Endereco'.", repo.SmilesOMelhorProgramaDeMilhasS1.Cadastro_EnderecoInfo, new RecordItemIndex(22));
            repo.SmilesOMelhorProgramaDeMilhasS1.Cadastro_Endereco.PressKeys(EnderecoRua, 1);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$EnderecoNum' with focus on 'SmilesOMelhorProgramaDeMilhasS1.Cadastro_NumeroCasa'.", repo.SmilesOMelhorProgramaDeMilhasS1.Cadastro_NumeroCasaInfo, new RecordItemIndex(23));
            repo.SmilesOMelhorProgramaDeMilhasS1.Cadastro_NumeroCasa.PressKeys(EnderecoNum, 1);
            Delay.Milliseconds(0);
            
            SelectItemListBox("//select[@id<'_stateBrazilian']", EnderecoUF);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$EnderecoCIdade' with focus on 'SmilesOMelhorProgramaDeMilhasS1.Cadastro_Cidade'.", repo.SmilesOMelhorProgramaDeMilhasS1.Cadastro_CidadeInfo, new RecordItemIndex(25));
            repo.SmilesOMelhorProgramaDeMilhasS1.Cadastro_Cidade.PressKeys(EnderecoCIdade, 1);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Senha' with focus on 'SmilesOMelhorProgramaDeMilhasS1.Cadastro_CrieSuaSenha'.", repo.SmilesOMelhorProgramaDeMilhasS1.Cadastro_CrieSuaSenhaInfo, new RecordItemIndex(26));
            repo.SmilesOMelhorProgramaDeMilhasS1.Cadastro_CrieSuaSenha.PressKeys(Senha, 1);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Senha' with focus on 'SmilesOMelhorProgramaDeMilhasS1.Cadastro_ConfirmarSenha'.", repo.SmilesOMelhorProgramaDeMilhasS1.Cadastro_ConfirmarSenhaInfo, new RecordItemIndex(27));
            repo.SmilesOMelhorProgramaDeMilhasS1.Cadastro_ConfirmarSenha.PressKeys(Senha, 1);
            Delay.Milliseconds(0);
            
            SelectCheckBox("//input[@id<'_acceptTermsCheckbox']", ValueConverter.ArgumentFromString<bool>("check", "True"));
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SmilesOMelhorProgramaDeMilhasS1.Cadastro_FinalizarCadastro' at 84;12.", repo.SmilesOMelhorProgramaDeMilhasS1.Cadastro_FinalizarCadastroInfo, new RecordItemIndex(29));
            repo.SmilesOMelhorProgramaDeMilhasS1.Cadastro_FinalizarCadastro.Click("84;12", 1);
            Delay.Milliseconds(490);
            
            Report.Screenshot(ReportLevel.Success, "User", "", null, false, new RecordItemIndex(30));
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
