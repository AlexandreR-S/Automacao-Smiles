///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace POCSmiles.Cadastro
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The AlterarSenha recording.
    /// </summary>
    [TestModule("48c4d98d-b2b7-46f4-ab14-79cfb42e9461", ModuleType.Recording, 1)]
    public partial class AlterarSenha : ITestModule
    {
        /// <summary>
        /// Holds an instance of the POCSmiles.SmilesRepository repository.
        /// </summary>
        public static POCSmiles.SmilesRepository repo = POCSmiles.SmilesRepository.Instance;

        static AlterarSenha instance = new AlterarSenha();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public AlterarSenha()
        {
            CPFSmilesID = "";
            NovaSenha = "yourtext";
            ConfirmarSenha = "yourtext";
            Senha = "";
            URL = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static AlterarSenha Instance
        {
            get { return instance; }
        }

#region Variables

        string _CPFSmilesID;

        /// <summary>
        /// Gets or sets the value of variable CPFSmilesID.
        /// </summary>
        [TestVariable("ae2acad1-6769-4904-9cf4-6a7a8ae3563c")]
        public string CPFSmilesID
        {
            get { return _CPFSmilesID; }
            set { _CPFSmilesID = value; }
        }

        string _NovaSenha;

        /// <summary>
        /// Gets or sets the value of variable NovaSenha.
        /// </summary>
        [TestVariable("72e861a7-248e-4434-be08-9538903428cd")]
        public string NovaSenha
        {
            get { return _NovaSenha; }
            set { _NovaSenha = value; }
        }

        string _ConfirmarSenha;

        /// <summary>
        /// Gets or sets the value of variable ConfirmarSenha.
        /// </summary>
        [TestVariable("3a4bd471-1938-4e36-8905-9bf63548c159")]
        public string ConfirmarSenha
        {
            get { return _ConfirmarSenha; }
            set { _ConfirmarSenha = value; }
        }

        string _Senha;

        /// <summary>
        /// Gets or sets the value of variable Senha.
        /// </summary>
        [TestVariable("ef6dce04-be24-4782-a9c1-52642fd66f89")]
        public string Senha
        {
            get { return _Senha; }
            set { _Senha = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable URL.
        /// </summary>
        [TestVariable("aa7b91c3-8944-44bc-a709-ada666e82f1a")]
        public string URL
        {
            get { return repo.URL; }
            set { repo.URL = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SmilesOMelhorProgramaDeMilhasS1.MyAccountChangePassword' at Center.", repo.SmilesOMelhorProgramaDeMilhasS1.MyAccountChangePasswordInfo, new RecordItemIndex(0));
            repo.SmilesOMelhorProgramaDeMilhasS1.MyAccountChangePassword.Click(1);
            Delay.Milliseconds(490);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Senha' with focus on 'SmilesOMelhorProgramaDeMilhasS1.AlterarDados_SenhaAtual'.", repo.SmilesOMelhorProgramaDeMilhasS1.AlterarDados_SenhaAtualInfo, new RecordItemIndex(1));
            repo.SmilesOMelhorProgramaDeMilhasS1.AlterarDados_SenhaAtual.PressKeys(Senha, 1);
            Delay.Milliseconds(90);
            
            InserirSenha("//input[#'_smilesloginportlet_WAR_smilesloginportlet_newPassword']", CPFSmilesID, URL, NovaSenha);
            Delay.Milliseconds(0);
            
            InserirSenha("//input[#'_smilesloginportlet_WAR_smilesloginportlet_confirmNewPassword']", CPFSmilesID, URL, ConfirmarSenha);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SmilesOMelhorProgramaDeMilhasS1.AlterarDados_Enviar' at 53;23.", repo.SmilesOMelhorProgramaDeMilhasS1.AlterarDados_EnviarInfo, new RecordItemIndex(4));
            repo.SmilesOMelhorProgramaDeMilhasS1.AlterarDados_Enviar.Click("53;23", 1);
            Delay.Milliseconds(490);
            
            Report.Screenshot(ReportLevel.Info, "User", "", null, false, new RecordItemIndex(5));
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
