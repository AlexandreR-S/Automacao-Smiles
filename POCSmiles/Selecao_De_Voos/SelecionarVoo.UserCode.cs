///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
// 
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Drawing;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Repository;
using Ranorex.Core.Testing;

namespace POCSmiles.Selecao_De_Voos
{
    public partial class SelecionarVoo
    {
        private void Init()
        {
            // Your recording specific initialization code goes here.
        }
        
        private void SelectFlyPayment(string type, string route, string linha){
        	try {
        		if (type.Equals("") || type.Equals("NA") || type.Equals("N/A"))
        		{
        			return;
        		}
        		Report.Info("Selecting payment type '" + type + "' in '" + route + "'");
        		Smiles_UserCode.SelectFlyPayment(repo,route,type,linha);
        		Report.Info("Payment selected");
        	} catch (Exception) {
        		Report.Error("SelecionarVoo - Error selecting payment type '" + type + "' in '" + route + "'");
        		throw new System.Exception("SelecionarVoo.SelectFlyPayment");
        	}
        }
        
        private void SelectRatePayment(string type){
        	try {
        		if (type.Equals("") || type.Equals("NA") || type.Equals("N/A"))
        		{
        			return;
        		}
        		Report.Info("Selecting rate payment  '" + type + "'");
        		switch (type)
        		{
        			case "Dinheiro":
        				repo.SmilesOMelhorProgramaDeMilhasS1.SelecionarVoo_TaxasDinhero.Click(Duration.FromMilliseconds(1));
        				break;
        			case "Milhas":
        				repo.SmilesOMelhorProgramaDeMilhasS1.SelecionarVoo_TaxasMilhas.Click(Duration.FromMilliseconds(1));
        				break;
        		}
        		Report.Info("Rate payment selected");
        	} catch (Exception) {
        		Report.Error("SelecionarVoo - Error selecting payment type '" + type + "'");
        		throw new System.Exception("SelecionarVoo.SelectRatePayment");
        	}
        }
        
        private void SelectCheckBox(string checkBoxPath, string check){
        	try {
        		Report.Info("Setting checkbox '" + checkBoxPath + "' on '" + check + "'");
        		Utils.SelectCheckBox(repo.SmilesOMelhorProgramaDeMilhasS1.AbsoluteBasePath.ToResolvedString() + checkBoxPath,bool.Parse(check));
        		Report.Info("Checkbox checked '" + check + "'");
        	} catch (Exception) {
        		Report.Error("SelecionarVoo - Error selecting payment type '" + "'");
        		throw new System.Exception("SelecionarVoo.SelectCheckBox");
        	}
        }
        
        private void WaitSmilesLoad(){
        	try {
        		Report.Info("Waiting Smiles' loading GIF");
        		Smiles_UserCode.WaitSmilesLoadGIF(repo,30);
        		Report.Info("Smiles' loading GIF desapeared");
        	} catch (Exception) {
        		Report.Error("SelecionarVoo - Error waiting Smiles' loading GIF desapear");
        		throw new System.Exception("SelecionarVoo.WaitSmilesLoad");
        	}
        }
        
        private void WaitPageLoad(){
        	try {
        		Report.Info("Waiting page load");
        		Smiles_UserCode.WaitLoad(repo,30);
        		Report.Info("Page loaded");
        	} catch (Exception) {
        		Report.Error("SelecionarVoo - Error waiting page load");
        		throw new System.Exception("SelecionarVoo.WaitPageLoad");
        	}
        }

        public void ClickIfExist()
        {
        	if (Utils.CheckExist(repo.SmilesOMelhorProgramaDeMilhasS1.PValidacao_EntendiContinuarInfo.AbsolutePath.ToResolvedString(),3000)) {
        		repo.SmilesOMelhorProgramaDeMilhasS1.PValidacao_EntendiContinuar.Click(Duration.FromMilliseconds(1));
        	}
        }
    }
}