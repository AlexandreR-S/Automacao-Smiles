///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace POCSmiles.Compra_De_Milhas
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The ComprarMilhasNEW recording.
    /// </summary>
    [TestModule("558106bf-723b-4759-bc4e-61bce864b156", ModuleType.Recording, 1)]
    public partial class ComprarMilhasNEW : ITestModule
    {
        /// <summary>
        /// Holds an instance of the POCSmiles.SmilesRepository repository.
        /// </summary>
        public static POCSmiles.SmilesRepository repo = POCSmiles.SmilesRepository.Instance;

        static ComprarMilhasNEW instance = new ComprarMilhasNEW();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public ComprarMilhasNEW()
        {
            Milhas = "";
            Voucher = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static ComprarMilhasNEW Instance
        {
            get { return instance; }
        }

#region Variables

        string _Milhas;

        /// <summary>
        /// Gets or sets the value of variable Milhas.
        /// </summary>
        [TestVariable("85c0223e-c388-42c3-ae50-491841f96ee5")]
        public string Milhas
        {
            get { return _Milhas; }
            set { _Milhas = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Voucher.
        /// </summary>
        [TestVariable("b6220114-5977-496d-b6cc-a69e23a1f881")]
        public string Voucher
        {
            get { return repo.Voucher; }
            set { repo.Voucher = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            SelectVoucher(Voucher);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(1));
            Delay.Duration(1000, false);
            
            WaitSmilesLoad();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{END}'.", new RecordItemIndex(3));
            Keyboard.Press("{END}");
            Delay.Milliseconds(0);
            
            TypeKeys(Milhas);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{TAB}{NEXT}'.", new RecordItemIndex(5));
            Keyboard.Press("{TAB}{NEXT}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SmilesOMelhorProgramaDeMilhasS1.ComprarMilhas_Comprar' at UpperCenter.", repo.SmilesOMelhorProgramaDeMilhasS1.ComprarMilhas_ComprarInfo, new RecordItemIndex(6));
            repo.SmilesOMelhorProgramaDeMilhasS1.ComprarMilhas_Comprar.Click(Location.UpperCenter, 1);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'SmilesOMelhorProgramaDeMilhasS1.Pagamento_ContinuarPagamento'.", repo.SmilesOMelhorProgramaDeMilhasS1.Pagamento_ContinuarPagamentoInfo, new RecordItemIndex(7));
            Validate.Exists(repo.SmilesOMelhorProgramaDeMilhasS1.Pagamento_ContinuarPagamentoInfo);
            Delay.Milliseconds(0);
            
            Report.Screenshot(ReportLevel.Success, "User", "", null, false, new RecordItemIndex(8));
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
